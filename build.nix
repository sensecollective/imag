# Generated by carnix 0.6.6: carnix --standalone --output build.nix --src . Cargo.lock
with import <nixpkgs> {};
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  imag = f: imag_0_7_0 { features = imag_0_7_0_features { imag_0_7_0 = f; }; };
  imag_annotate = f: imag_annotate_0_7_0 { features = imag_annotate_0_7_0_features { imag_annotate_0_7_0 = f; }; };
  imag_bookmark = f: imag_bookmark_0_7_0 { features = imag_bookmark_0_7_0_features { imag_bookmark_0_7_0 = f; }; };
  imag_contact = f: imag_contact_0_7_0 { features = imag_contact_0_7_0_features { imag_contact_0_7_0 = f; }; };
  imag_diagnostics = f: imag_diagnostics_0_7_0 { features = imag_diagnostics_0_7_0_features { imag_diagnostics_0_7_0 = f; }; };
  imag_diary = f: imag_diary_0_7_0 { features = imag_diary_0_7_0_features { imag_diary_0_7_0 = f; }; };
  imag_edit = f: imag_edit_0_7_0 { features = imag_edit_0_7_0_features { imag_edit_0_7_0 = f; }; };
  imag_gps = f: imag_gps_0_7_0 { features = imag_gps_0_7_0_features { imag_gps_0_7_0 = f; }; };
  imag_grep = f: imag_grep_0_7_0 { features = imag_grep_0_7_0_features { imag_grep_0_7_0 = f; }; };
  imag_habit = f: imag_habit_0_7_0 { features = imag_habit_0_7_0_features { imag_habit_0_7_0 = f; }; };
  imag_ids = f: imag_ids_0_7_0 { features = imag_ids_0_7_0_features { imag_ids_0_7_0 = f; }; };
  imag_init = f: imag_init_0_7_0 { features = imag_init_0_7_0_features { imag_init_0_7_0 = f; }; };
  imag_link = f: imag_link_0_7_0 { features = imag_link_0_7_0_features { imag_link_0_7_0 = f; }; };
  imag_log = f: imag_log_0_7_0 { features = imag_log_0_7_0_features { imag_log_0_7_0 = f; }; };
  imag_mail = f: imag_mail_0_7_0 { features = imag_mail_0_7_0_features { imag_mail_0_7_0 = f; }; };
  imag_mv = f: imag_mv_0_7_0 { features = imag_mv_0_7_0_features { imag_mv_0_7_0 = f; }; };
  imag_notes = f: imag_notes_0_7_0 { features = imag_notes_0_7_0_features { imag_notes_0_7_0 = f; }; };
  imag_ref = f: imag_ref_0_7_0 { features = imag_ref_0_7_0_features { imag_ref_0_7_0 = f; }; };
  imag_store = f: imag_store_0_7_0 { features = imag_store_0_7_0_features { imag_store_0_7_0 = f; }; };
  imag_tag = f: imag_tag_0_7_0 { features = imag_tag_0_7_0_features { imag_tag_0_7_0 = f; }; };
  imag_timetrack = f: imag_timetrack_0_7_0 { features = imag_timetrack_0_7_0_features { imag_timetrack_0_7_0 = f; }; };
  imag_todo = f: imag_todo_0_7_0 { features = imag_todo_0_7_0_features { imag_todo_0_7_0 = f; }; };
  imag_view = f: imag_view_0_7_0 { features = imag_view_0_7_0_features { imag_view_0_7_0 = f; }; };
  libimagbookmark = f: libimagbookmark_0_7_0 { features = libimagbookmark_0_7_0_features { libimagbookmark_0_7_0 = f; }; };
  libimagcontact = f: libimagcontact_0_7_0 { features = libimagcontact_0_7_0_features { libimagcontact_0_7_0 = f; }; };
  libimagdiary = f: libimagdiary_0_7_0 { features = libimagdiary_0_7_0_features { libimagdiary_0_7_0 = f; }; };
  libimagentryannotation = f: libimagentryannotation_0_7_0 { features = libimagentryannotation_0_7_0_features { libimagentryannotation_0_7_0 = f; }; };
  libimagentrycategory = f: libimagentrycategory_0_7_0 { features = libimagentrycategory_0_7_0_features { libimagentrycategory_0_7_0 = f; }; };
  libimagentrydatetime = f: libimagentrydatetime_0_7_0 { features = libimagentrydatetime_0_7_0_features { libimagentrydatetime_0_7_0 = f; }; };
  libimagentryedit = f: libimagentryedit_0_7_0 { features = libimagentryedit_0_7_0_features { libimagentryedit_0_7_0 = f; }; };
  libimagentryfilter = f: libimagentryfilter_0_7_0 { features = libimagentryfilter_0_7_0_features { libimagentryfilter_0_7_0 = f; }; };
  libimagentrygps = f: libimagentrygps_0_7_0 { features = libimagentrygps_0_7_0_features { libimagentrygps_0_7_0 = f; }; };
  libimagentrylink = f: libimagentrylink_0_7_0 { features = libimagentrylink_0_7_0_features { libimagentrylink_0_7_0 = f; }; };
  libimagentrymarkdown = f: libimagentrymarkdown_0_7_0 { features = libimagentrymarkdown_0_7_0_features { libimagentrymarkdown_0_7_0 = f; }; };
  libimagentryref = f: libimagentryref_0_7_0 { features = libimagentryref_0_7_0_features { libimagentryref_0_7_0 = f; }; };
  libimagentrytag = f: libimagentrytag_0_7_0 { features = libimagentrytag_0_7_0_features { libimagentrytag_0_7_0 = f; }; };
  libimagentryutil = f: libimagentryutil_0_7_0 { features = libimagentryutil_0_7_0_features { libimagentryutil_0_7_0 = f; }; };
  libimagentryview = f: libimagentryview_0_7_0 { features = libimagentryview_0_7_0_features { libimagentryview_0_7_0 = f; }; };
  libimagerror = f: libimagerror_0_7_0 { features = libimagerror_0_7_0_features { libimagerror_0_7_0 = f; }; };
  libimaghabit = f: libimaghabit_0_7_0 { features = libimaghabit_0_7_0_features { libimaghabit_0_7_0 = f; }; };
  libimaginteraction = f: libimaginteraction_0_7_0 { features = libimaginteraction_0_7_0_features { libimaginteraction_0_7_0 = f; }; };
  libimaglog = f: libimaglog_0_7_0 { features = libimaglog_0_7_0_features { libimaglog_0_7_0 = f; }; };
  libimagmail = f: libimagmail_0_7_0 { features = libimagmail_0_7_0_features { libimagmail_0_7_0 = f; }; };
  libimagnotes = f: libimagnotes_0_7_0 { features = libimagnotes_0_7_0_features { libimagnotes_0_7_0 = f; }; };
  libimagnotification = f: libimagnotification_0_7_0 { features = libimagnotification_0_7_0_features { libimagnotification_0_7_0 = f; }; };
  libimagrt = f: libimagrt_0_7_0 { features = libimagrt_0_7_0_features { libimagrt_0_7_0 = f; }; };
  libimagstore = f: libimagstore_0_7_0 { features = libimagstore_0_7_0_features { libimagstore_0_7_0 = f; }; };
  libimagtimetrack = f: libimagtimetrack_0_7_0 { features = libimagtimetrack_0_7_0_features { libimagtimetrack_0_7_0 = f; }; };
  libimagtimeui = f: libimagtimeui_0_7_0 { features = libimagtimeui_0_7_0_features { libimagtimeui_0_7_0 = f; }; };
  libimagtodo = f: libimagtodo_0_7_0 { features = libimagtodo_0_7_0_features { libimagtodo_0_7_0 = f; }; };
  libimagutil = f: libimagutil_0_7_0 { features = libimagutil_0_7_0_features { libimagutil_0_7_0 = f; }; };
  aho_corasick_0_6_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "189v919mp6rzzgjp1khpn4zlq8ls81gh43x1lmc8kbkagdlpq888";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot"; } ];
    inherit dependencies buildDependencies features;
  };
  ansi_term_0_10_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ansi_term";
    version = "0.10.2";
    authors = [ "ogham@bsago.me" "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>" "Josh Triplett <josh@joshtriplett.org>" ];
    sha256 = "07k0hfmlhv43lihyxb9d81l5mq5zlpqvv30dkfd3knmv2ginasn9";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.6";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "1y2nmvx04iqxaz4a5alhbgbpkdf1wqb7z0097qmw08b5iqhfa4wv";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "0vj1dgsivxci5r43w9d56yb98g3r7ff75zr5f592j7yizznshh2r";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.16";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1cn2c8q3dn06crmnk0p62czkngam4l8nf57wy33nz1y5g25pszwy";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.5.2";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "1xl4zf9y9mk8syl1bg8hnf99g2zxlr7xj1xii3b2j88a07c1c6f7";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.5.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0bgw1kiy121kikjrwj6zsd7l8n1gg1jirivzkc7zpjsvqa3p0hla";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0p4b3nr0s5nda2qmm7xdhnvh4lkqk3xd8l9ffmwbvqw137vx7mj1";
    inherit dependencies buildDependencies features;
  };
  block_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "block";
    version = "0.1.6";
    authors = [ "Steven Sheldon" ];
    sha256 = "1hwfh5992ya0dsbn1ldrlbbdi2a8fqmnvdnla5rdbnd4g2bsc6q5";
    inherit dependencies buildDependencies features;
  };
  boolinator_2_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "boolinator";
    version = "2.4.0";
    authors = [ "Daniel Keep <daniel.keep@gmail.com>" ];
    sha256 = "1kls4qphqdyrb0vr4y71dnii5az5jk235m9xjsy5g81iqd0ffklm";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1wsxnqcscg4gchdmgdbwc78lw2qx2i6bnjd564xq7h7qc4fp2157";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1bhxmq231c62amw14lghz5xi2cjvm0r7kp3ajsj6zqw9843zwkfw";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0x06hvrrqy96m97593823vvxcgvjaxckghwyy2jcyc8qc7c6cyhi";
    inherit dependencies buildDependencies features;
  };
  chrono_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.3.0";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0mshjr8h471bvqv0fp02rf0p5582l9kzdcs2kavl1hk7i4qpdv3r";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.0";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0hm53hi6v7b6b1va6vn96lx26wvj8gzi2g51s1j02nlz0jcprw6a";
    inherit dependencies buildDependencies features;
  };
  clap_2_30_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "clap";
    version = "2.30.0";
    authors = [ "Kevin K. <kbknapp@gmail.com>" ];
    sha256 = "1mqakqrlqr127v1whwhv59bsxb6d7f0mi61c00fg8f83paxbs3y5";
    inherit dependencies buildDependencies features;
  };
  csv_0_15_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "csv";
    version = "0.15.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0gxk7lz1k036mqza1j7l0lswx0z9iaj1msx5bwbrj26c6x05fb47";
    crateBin = [ {  name = "bench-large";  path = "bench_large/huge.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  dbus_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbus";
    version = "0.4.1";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "0qw32qj2rys318h780klxlznkwg93dfimbn8mc34m4940l8v00g9";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  either_1_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.4.0";
    authors = [ "bluss" ];
    sha256 = "04kpfd84lvyrkb2z4sljlz2d3d5qczd0sb1yy37fgijq2yx3vb37";
    inherit dependencies buildDependencies features;
  };
  email_0_0_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "email";
    version = "0.0.17";
    authors = [ "Nicholas Hollett <niax@niax.co.uk>" ];
    sha256 = "041aa8ry1wh4247w0p0ar35janlcllfs6bhq636iqv4ykn8pbffw";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  encode_unicode_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encode_unicode";
    version = "0.3.1";
    authors = [ "Torbjørn Birch Moltu <t.b.moltu@lyse.net>" ];
    sha256 = "0zdh6jkgwqpnrqk1hx23a7azj4fvlf10wn75xrx0ri1h5wcxzz3k";
    inherit dependencies buildDependencies features;
  };
  encoding_0_2_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding";
    version = "0.2.33";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "16ls6avhv5ll28zajl5q1jbiz1g80c4ygnw13zzqmij14wsp5329";
    inherit dependencies buildDependencies features;
  };
  encoding_index_japanese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-japanese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "1pmfaabps0x6v6cd4fbk9ssykhkmc799dma2y78fhk7gvyr5gyl4";
    libPath = "lib.rs";
    libName = "encoding_index_japanese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_korean_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-korean";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "1b756n7gcilkx07y7zjrikcg0b8v8yd6mw8w01ji8sp3k1cabcf2";
    libPath = "lib.rs";
    libName = "encoding_index_korean";
    inherit dependencies buildDependencies features;
  };
  encoding_index_simpchinese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-simpchinese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0rb4xd8cqymhqffqqxdk18mf9n354vs50ar66jrysb1z6ymcvvpy";
    libPath = "lib.rs";
    libName = "encoding_index_simpchinese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_singlebyte_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-singlebyte";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "07df3jrfwfmzi2s352lvcpvy5dqpy2s45d2xx2dz1x7zh3q5284d";
    libPath = "lib.rs";
    libName = "encoding_index_singlebyte";
    inherit dependencies buildDependencies features;
  };
  encoding_index_tradchinese_1_20141219_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding-index-tradchinese";
    version = "1.20141219.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0lb12nbv29cy41gx26yz3v4kfi8h1xbn1ppja8szgqi2zm1wlywn";
    libPath = "lib.rs";
    libName = "encoding_index_tradchinese";
    inherit dependencies buildDependencies features;
  };
  encoding_index_tests_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding_index_tests";
    version = "0.1.4";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" ];
    sha256 = "0z09kwh4z76q00cfr081rgjbnai4s2maq2vk88lgrq9d6bkf93f6";
    libPath = "index_tests.rs";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.5.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1i7jyxrwwv3w2h200ynq3fjg1iyyvi76ny215hi6d334vkkw2s2y";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.10.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "1xxbzd8cjlpzsb9fsih7mdnndhzrvykj0w77yg90qc85az1xwy5z";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  filters_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "filters";
    version = "0.2.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" "Marcel Müller <neikos@neikos.email>" ];
    sha256 = "0nswwx4smfy8i04k6q5yd4mriai0h3ciyfmlpp13lg4l0cxsld0k";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  gcc_0_3_54_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gcc";
    version = "0.3.54";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07a5i47r8achc6gxsba3ga17h9gnh4b9a2cak8vjg4hx62aajkr4";
    inherit dependencies buildDependencies features;
  };
  glob_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "glob";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "104389jjxs8r2f5cc9p0axhjmndgln60ih5x4f00ccgg9d3zarlf";
    inherit dependencies buildDependencies features;
  };
  handlebars_0_29_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "handlebars";
    version = "0.29.1";
    authors = [ "Ning Sun <sunng@about.me>" ];
    sha256 = "159av3h632rvll7w33lysvgkdbr2jwrk0h0nn0qiqnq8lgh3d96k";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  hoedown_6_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hoedown";
    version = "6.0.0";
    authors = [ "Jorge Israel Peña <jorge.israel.p@gmail.com>" ];
    sha256 = "0nfcg917zvsnxjz4g5ndqwhrjbi81vpmca1lr4wc9z4xlp1rlwl5";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.4";
    authors = [ "The rust-url developers" ];
    sha256 = "15j44qgjx1skwg9i7f4cm36ni4n99b1ayx23yxx7axxcw8vjf336";
    inherit dependencies buildDependencies features;
  };
  imag_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_annotate_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-annotate";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-annotate;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_bookmark_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-bookmark";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-bookmark;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_contact_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-contact";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-contact;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_diagnostics_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-diagnostics";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-diagnostics;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_diary_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-diary";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-diary;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_edit_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-edit";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-edit;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_gps_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-gps";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-gps;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_grep_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-grep";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-grep;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_habit_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-habit";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-habit;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_ids_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-ids";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-ids;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_init_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-init";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-init;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_link_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-link";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-link;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_log_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-log";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-log;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_mail_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-mail";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-mail;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_mv_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-mv";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-mv;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_notes_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-notes";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-notes;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_ref_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-ref";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-ref;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_store_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-store";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-store;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_tag_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-tag";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-tag;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_timetrack_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-timetrack";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/domain/imag-timetrack;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_todo_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-todo";
    version = "0.7.0";
    authors = [ "mario <mario-krehl@gmx.de>" ];
    src = bin/domain/imag-todo;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  imag_view_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "imag-view";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = bin/core/imag-view;
    build = ./build.rs;
    inherit dependencies buildDependencies features;
  };
  interactor_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "interactor";
    version = "0.1.1";
    authors = [ "Greg V <greg@unrelenting.technology>" ];
    sha256 = "066mvny73ih1j8x8fhv2v2i6yinpgzn9fq5a16xc5f0ich43vrpl";
    inherit dependencies buildDependencies features;
  };
  is_match_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "is-match";
    version = "0.1.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    sha256 = "1pml3fcxq6yp75h0ybpywpg42m33qazmgfw57aysc6ildmxsdjq9";
    inherit dependencies buildDependencies features;
  };
  iso8601_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "iso8601";
    version = "0.2.0";
    authors = [ "Jan-Erik Rediger <janerik@fnordig.de>" "Hendrik Sollich <hendrik@hoodie.de>" ];
    sha256 = "18zm5pnc26q1q8l65r702bcnvkdzzbdmsq96gxcwa00lxja7l2d4";
    inherit dependencies buildDependencies features;
  };
  itertools_0_7_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.7.6";
    authors = [ "bluss" ];
    sha256 = "0r1sjzpn2lyv7f9akvjiz8vwsk2510a2r8sz6slsxicyhv5hhx1m";
    inherit dependencies buildDependencies features;
  };
  itoa_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.3.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nfkzz6vrgj0d9l3yzjkkkqzdgs68y294fjdbl7jq118qi8xc9d9";
    inherit dependencies buildDependencies features;
  };
  kairos_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kairos";
    version = "0.1.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    sha256 = "06q5gn83c85jf4d7kf8sp1xd94cqfp2ri2kb3zsm5n4865wsbkjr";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01633h4yfqm0s302fm0dlba469bx8y6cs4nqc8bqrmjqxfxn515l";
    inherit dependencies buildDependencies features;
  };
  libimagbookmark_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagbookmark";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimagbookmark;
    inherit dependencies buildDependencies features;
  };
  libimagcontact_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagcontact";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimagcontact;
    inherit dependencies buildDependencies features;
  };
  libimagdiary_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagdiary";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimagdiary;
    inherit dependencies buildDependencies features;
  };
  libimagentryannotation_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentryannotation";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentryannotation;
    inherit dependencies buildDependencies features;
  };
  libimagentrycategory_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentrycategory";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentrycategory;
    inherit dependencies buildDependencies features;
  };
  libimagentrydatetime_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentrydatetime";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentrydatetime;
    inherit dependencies buildDependencies features;
  };
  libimagentryedit_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentryedit";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentryedit;
    inherit dependencies buildDependencies features;
  };
  libimagentryfilter_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentryfilter";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentryfilter;
    inherit dependencies buildDependencies features;
  };
  libimagentrygps_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentrygps";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentrygps;
    inherit dependencies buildDependencies features;
  };
  libimagentrylink_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentrylink";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentrylink;
    inherit dependencies buildDependencies features;
  };
  libimagentrymarkdown_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentrymarkdown";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentrymarkdown;
    inherit dependencies buildDependencies features;
  };
  libimagentryref_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentryref";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentryref;
    inherit dependencies buildDependencies features;
  };
  libimagentrytag_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentrytag";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentrytag;
    inherit dependencies buildDependencies features;
  };
  libimagentryutil_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentryutil";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentryutil;
    inherit dependencies buildDependencies features;
  };
  libimagentryview_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagentryview";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/entry/libimagentryview;
    inherit dependencies buildDependencies features;
  };
  libimagerror_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagerror";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/core/libimagerror;
    inherit dependencies buildDependencies features;
  };
  libimaghabit_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimaghabit";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimaghabit;
    inherit dependencies buildDependencies features;
  };
  libimaginteraction_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimaginteraction";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/etc/libimaginteraction;
    inherit dependencies buildDependencies features;
  };
  libimaglog_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimaglog";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimaglog;
    inherit dependencies buildDependencies features;
  };
  libimagmail_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagmail";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimagmail;
    inherit dependencies buildDependencies features;
  };
  libimagnotes_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagnotes";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimagnotes;
    inherit dependencies buildDependencies features;
  };
  libimagnotification_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagnotification";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/etc/libimagnotification;
    inherit dependencies buildDependencies features;
  };
  libimagrt_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagrt";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/core/libimagrt;
    inherit dependencies buildDependencies features;
  };
  libimagstore_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagstore";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/core/libimagstore;
    inherit dependencies buildDependencies features;
  };
  libimagtimetrack_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagtimetrack";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/domain/libimagtimetrack;
    inherit dependencies buildDependencies features;
  };
  libimagtimeui_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagtimeui";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/etc/libimagtimeui;
    inherit dependencies buildDependencies features;
  };
  libimagtodo_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagtodo";
    version = "0.7.0";
    authors = [ "mario <mario-krehl@gmx.de>" ];
    src = lib/domain/libimagtodo;
    inherit dependencies buildDependencies features;
  };
  libimagutil_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libimagutil";
    version = "0.7.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    src = lib/etc/libimagutil;
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  mac_notification_sys_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mac-notification-sys";
    version = "0.1.3";
    authors = [ "Felix Döring <development@felixdoering.com>" ];
    sha256 = "0crjbfnrr76chh0l1386ky67v1gv79qqj9q4w1l610mb8f9fvpwi";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  malloc_buf_0_0_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "malloc_buf";
    version = "0.0.6";
    authors = [ "Steven Sheldon" ];
    sha256 = "0g3n9a74vnvz3ip8fp90ss2jwr27mzkb5q6r61fcv8n829rwhxfp";
    inherit dependencies buildDependencies features;
  };
  matches_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.6";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1zlrqlbvzxdil8z8ial2ihvxjwvlvg3g8dr0lcdpsjclkclasjan";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  memchr_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "1.0.2";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0dfb8ifl9nrc9kzgd5z91q6qg87sh285q1ih7xgrsglmqfav9lg7";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  nom_3_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nom";
    version = "3.2.1";
    authors = [ "contact@geoffroycouprie.com" ];
    sha256 = "1vcllxrz9hdw6j25kn020ka3psz1vkaqh1hm3yfak2240zrxgi07";
    inherit dependencies buildDependencies features;
  };
  notify_rust_3_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "notify-rust";
    version = "3.4.2";
    authors = [ "Hendrik Sollich <hendrik@hoodie.de>" "panicbit <panicbit@users.noreply.github.com>" ];
    sha256 = "0xx347dxsbvdn4vcxjyabrr0acwxrl04lnqk8f5vlng4nkp4hxg6";
    inherit dependencies buildDependencies features;
  };
  num_0_1_42_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num";
    version = "0.1.42";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1632gczzrmmxdsj3jignwcr793jq8vxw3qkdzpdvbip3vaf1ljgq";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.36";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fjprz9h8b04zrsnfmkkfhiw4w852bbh16hy8w9ahlcdhg77i66y";
    inherit dependencies buildDependencies features;
  };
  num_iter_0_1_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-iter";
    version = "0.1.35";
    authors = [ "The Rust Project Developers" ];
    sha256 = "12w49r9als1ihg6rc3qkj673vwi0bmh47pzy6x4samlb07w074mi";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1zdzx78vrcg3f39w94pqjs1mwxl1phyv7843hwgwkzggwcxhhf6s";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1c11xq07jbv8skvlr4vka0by71mpdgvbvrnid2gp2kdk41ksxv89";
    inherit dependencies buildDependencies features;
  };
  objc_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "objc";
    version = "0.2.2";
    authors = [ "Steven Sheldon" ];
    sha256 = "12kaldivbks67j0jfc82f8962j2ry0z1jlkhjihmnm82gc4w2vjm";
    inherit dependencies buildDependencies features;
  };
  objc_foundation_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "objc-foundation";
    version = "0.1.1";
    authors = [ "Steven Sheldon" ];
    sha256 = "0xab2xw363mmp4gchxa4sjbh9dlivvcqc03h85lx0nhmxyim1cgw";
    inherit dependencies buildDependencies features;
  };
  objc_id_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "objc_id";
    version = "0.1.0";
    authors = [ "Steven Sheldon" ];
    sha256 = "0dal9z7lchkmmyw5jff6psb09q17pjrw1mwh84q5dqc30krmhmrh";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  pest_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pest";
    version = "0.3.3";
    authors = [ "Dragoș Tiselice <dragostiselice@gmail.com>" ];
    sha256 = "17wrz0vn21i23c89y6mxcmi9vnig30vbf99fhqqv0ch9lxdfbbbp";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06k8fxgrsrxj8mjpjcq1n7mn2p1shpxif4zg9y5h09c7vy20s146";
    inherit dependencies buildDependencies features;
  };
  prettytable_rs_0_6_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "prettytable-rs";
    version = "0.6.7";
    authors = [ "Pierre-Henri Symoneaux" ];
    sha256 = "12hpfqjly3j8c23nvng689kyvqnb93sxpywn6zx6b75vaj67mkm1";
    libName = "prettytable";
    crateBin = [ {  name = "main"; } ];
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "0vq41csw68ynaq2fy5dvldh4lx7pnbw6pr332kv5rvrz4pz0jnq6";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "05yahhpgxlpp6vg82d3j7zsb54gzpd8sy19az3n3l13p14zgin4k";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1pch2dmdnh712c9d2k7mxbkl6wbr433x6asip65mp76cn8syrqdw";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.3.0";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1m9n4fh3ivadmdvmr5q0la19r6xi56q9r48vc3vv27p1w0z5hy7n";
    inherit dependencies buildDependencies features;
  };
  rust_crypto_0_2_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rust-crypto";
    version = "0.2.36";
    authors = [ "The Rust-Crypto Project Developers" ];
    sha256 = "1hm79xjmkyl20bx4b8ns77xbrm8wqklhqnci54n93zr6wiq3ddgi";
    libName = "crypto";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "15knzb15pm09kkx2xcnipj0yynr749dwk3xksp6nmykh1zxmnn3g";
    inherit dependencies buildDependencies features;
  };
  rustc_serialize_0_3_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-serialize";
    version = "0.3.24";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
    inherit dependencies buildDependencies features;
  };
  rustc_version_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc_version";
    version = "0.1.7";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0plm9pbyvcwfibd0kbhzil9xmr1bvqi8fgwlfw0x4vali8s6s99p";
    inherit dependencies buildDependencies features;
  };
  same_file_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "same-file";
    version = "0.1.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "01hdnxblb1hlysr47nwdv7r8vs7p63ia08v5h4lcffmzqvl5zzn9";
    inherit dependencies buildDependencies features;
  };
  semver_0_1_20_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver";
    version = "0.1.20";
    authors = [ "The Rust Project Developers" ];
    sha256 = "05cdig0071hls2k8lxbqmyqpl0zjmc53i2d43mwzps033b8njh4n";
    inherit dependencies buildDependencies features;
  };
  semver_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver";
    version = "0.8.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" "The Rust Project Developers" ];
    sha256 = "0wgg4lmjmqj6sk6q50mw4qbx178a9nd3afb5q8c68ajzj0lfc3cv";
    inherit dependencies buildDependencies features;
  };
  semver_parser_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver-parser";
    version = "0.7.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" ];
    sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.27";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1mpx1p6rjhajhxwapxsswqi7fdh3ms2cz6aj0h615wx17ckl6cyw";
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.27";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0h70hzs973fjhmipmhxy1sh4s1dbj984vwlkcxqfjipwgggj1m19";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_internals_0_19_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive_internals";
    version = "0.19.0";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "12gg08kq295npvhrl1ryzgn0rn2az4kvmj7zlzdda4094qwqgrzz";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.9";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1pcclssyndz54cncsizkqrblmqqr1p2g6xhkpwldbk6qc95m4yw3";
    inherit dependencies buildDependencies features;
  };
  strsim_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "strsim";
    version = "0.7.0";
    authors = [ "Danny Guo <dannyguo91@gmail.com>" ];
    sha256 = "0fy0k5f2705z73mb3x9459bpcvrx4ky8jpr4zikcbiwan4bnm0iv";
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  task_hookrs_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "task-hookrs";
    version = "0.4.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" "Mario Krehl <mario-krehl@gmx.de>" ];
    src = fetchgit {
       url = "https://github.com/matthiasbeyer/task-hookrs.git";
       rev = "409edcafb8bd855fa2d1fb738cd0e10e55517de7";
       sha256 = "1b6bd1aa8gh3rcl3kcvk09w3pj4wx5hwr51qrfgjzf4ip2s9i51v";
    };
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gp7r78p1wianwph2c6hjfrm3npkrsv2yabfri70a9w7q6j53x82";
    inherit dependencies buildDependencies features;
  };
  tempfile_2_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempfile";
    version = "2.2.0";
    authors = [ "Steven Allen <steven@stebalien.com>" ];
    sha256 = "1z3l901ipvi0s0mdppw4lwfa77ydb22rfnf6y9sh0pifj7ah5drf";
    inherit dependencies buildDependencies features;
  };
  term_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term";
    version = "0.4.6";
    authors = [ "The Rust Project Developers" "Steven Allen" ];
    sha256 = "14fll0l6247b4iyxnj52lpvxhd10yxbkmnpyxrn84iafzqmp56kv";
    inherit dependencies buildDependencies features;
  };
  termcolor_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termcolor";
    version = "0.3.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0vz88m4rjnv1brkvsanq88kpdzj2zi5r1rj4j04axfa94cz2bbm9";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  termios_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termios";
    version = "0.3.0";
    authors = [ "David Cuddeback <david.cuddeback@gmail.com>" ];
    sha256 = "0d5vpwdaimbq2pz4a4njcyxc2spvssxn2v8n9mc6flys4h0ir9nv";
    inherit dependencies buildDependencies features;
  };
  textwrap_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "textwrap";
    version = "0.9.0";
    authors = [ "Martin Geisler <martin@geisler.net>" ];
    sha256 = "18jg79ndjlwndz01mlbh82kkr2arqm658yn5kwp65l5n1hz8w4yb";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  time_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ryy3bwhvyzj6fym123il38mk9ranm4vradj2a47l5ij8jd7w5if";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "06zxqhn3y58yzjfaykhcrvlf7p2dnn54kn3g4apmja3cn5b18lkk";
    inherit dependencies buildDependencies features;
  };
  toml_query_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml-query";
    version = "0.4.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    sha256 = "0v2ij5lkwj617qqq3xnm4mnph7hfwidi2nbc8xsinmysxxsjlw26";
    inherit dependencies buildDependencies features;
  };
  toml_query_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml-query";
    version = "0.6.0";
    authors = [ "Matthias Beyer <mail@beyermatthias.de>" ];
    sha256 = "07mm98qcj00n2bxazifzkksisws8cl8rfz6i29yk97dlr1bk86xi";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0hg29g86fca7b65mwk4sm5s838js6bqrl0gabadbazvbsgjam0j5";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.4";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1rp7a04icn9y5c0lm74nrd4py0rdl0af8bhdwq7g478n1xifpifl";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  url_1_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.6.0";
    authors = [ "The rust-url developers" ];
    sha256 = "1bvzl4dvjj84h46ai3x23wyafa2wwhchj08vr2brf25dxwc7mg18";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  uuid_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.6.0";
    authors = [ "Ashley Mannix<ashleymannix@live.com.au>" "Christopher Armstrong" "Dylan DPC<dylan.dpc@gmail.com>" "Hunar Roop Kahlon<hunar.roop@gmail.com>" ];
    sha256 = "16m6wpk5vgrkpyzdgf38dkh6mdvyx493nv5am58lb9g5bqvkfz5f";
    inherit dependencies buildDependencies features;
  };
  version_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version";
    version = "2.0.1";
    authors = [ "Nulldata <nulldatamap@gmail.com>" ];
    sha256 = "0kfh38mvjyiirprb557m1sd4k8x70a6ys9cdd1hah4c74v0v0vzn";
    inherit dependencies buildDependencies features;
  };
  vobject_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vobject";
    version = "0.4.2";
    authors = [ "Markus Unterwaditzer <markus@unterwaditzer.net>" ];
    sha256 = "0p5gyilj3xz0nhx5g3z7mz3yaicy0x47ws39lq3ns6x9ggp9nw1s";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  walkdir_1_0_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "walkdir";
    version = "1.0.7";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1ygsc59m8mbnlz0psjxdzm1xjndxpywjwalqcd3pwdarzk1gy1vr";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  wincolor_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wincolor";
    version = "0.1.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0f8m3l86pw6qi31jidqj78pgd15xj914850lyvsxkbln4f1drv47";
    inherit dependencies buildDependencies features;
  };
  xdg_basedir_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xdg-basedir";
    version = "1.0.0";
    authors = [ "Kiran Purushothaman <projects@kirankp.com>" ];
    sha256 = "0hp6hxzk84c7rghr9d5202cv872n16aypl5r1fkz96d49kk1lzzb";
    libName = "xdg_basedir";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_4 = { features?(aho_corasick_0_6_4_features {}) }: aho_corasick_0_6_4_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_4_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = (f.aho_corasick_0_6_4.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  ansi_term_0_10_2 = { features?(ansi_term_0_10_2_features {}) }: ansi_term_0_10_2_ {};
  ansi_term_0_10_2_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = (f.ansi_term_0_10_2.default or true);
  }) [];
  atty_0_2_6 = { features?(atty_0_2_6_features {}) }: atty_0_2_6_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_36 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  atty_0_2_6_features = f: updateFeatures f (rec {
    atty_0_2_6.default = (f.atty_0_2_6.default or true);
    libc_0_2_36.default = (f.libc_0_2_36.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_36_features winapi_0_3_4_features ];
  backtrace_0_3_5 = { features?(backtrace_0_3_5_features {}) }: backtrace_0_3_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 rustc_demangle_0_1_6 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.backtrace-sys or false then [ backtrace_sys_0_1_16 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_36 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_5.winapi or false then [ winapi_0_3_4 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_5 or {});
  };
  backtrace_0_3_5_features = f: updateFeatures f (rec {
    backtrace_0_3_5.addr2line =
      (f.backtrace_0_3_5.addr2line or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.backtrace-sys =
      (f.backtrace_0_3_5.backtrace-sys or false) ||
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (backtrace_0_3_5.libbacktrace or false);
    backtrace_0_3_5.coresymbolication =
      (f.backtrace_0_3_5.coresymbolication or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.dbghelp =
      (f.backtrace_0_3_5.dbghelp or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.default = (f.backtrace_0_3_5.default or true);
    backtrace_0_3_5.dladdr =
      (f.backtrace_0_3_5.dladdr or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.findshlibs =
      (f.backtrace_0_3_5.findshlibs or false) ||
      (f.backtrace_0_3_5.gimli-symbolize or false) ||
      (backtrace_0_3_5.gimli-symbolize or false);
    backtrace_0_3_5.libbacktrace =
      (f.backtrace_0_3_5.libbacktrace or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.libunwind =
      (f.backtrace_0_3_5.libunwind or false) ||
      (f.backtrace_0_3_5.default or false) ||
      (backtrace_0_3_5.default or false);
    backtrace_0_3_5.rustc-serialize =
      (f.backtrace_0_3_5.rustc-serialize or false) ||
      (f.backtrace_0_3_5.serialize-rustc or false) ||
      (backtrace_0_3_5.serialize-rustc or false);
    backtrace_0_3_5.serde =
      (f.backtrace_0_3_5.serde or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.serde_derive =
      (f.backtrace_0_3_5.serde_derive or false) ||
      (f.backtrace_0_3_5.serialize-serde or false) ||
      (backtrace_0_3_5.serialize-serde or false);
    backtrace_0_3_5.winapi =
      (f.backtrace_0_3_5.winapi or false) ||
      (f.backtrace_0_3_5.dbghelp or false) ||
      (backtrace_0_3_5.dbghelp or false);
    backtrace_sys_0_1_16.default = true;
    cfg_if_0_1_2.default = true;
    libc_0_2_36.default = true;
    rustc_demangle_0_1_6.default = true;
    winapi_0_3_4.dbghelp = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processthreadsapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.winnt = true;
  }) [ cfg_if_0_1_2_features rustc_demangle_0_1_6_features backtrace_sys_0_1_16_features libc_0_2_36_features winapi_0_3_4_features ];
  backtrace_sys_0_1_16 = { features?(backtrace_sys_0_1_16_features {}) }: backtrace_sys_0_1_16_ {
    dependencies = mapFeatures features ([ libc_0_2_36 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_4 ]);
  };
  backtrace_sys_0_1_16_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_16.default = (f.backtrace_sys_0_1_16.default or true);
    cc_1_0_4.default = true;
    libc_0_2_36.default = true;
  }) [ libc_0_2_36_features cc_1_0_4_features ];
  base64_0_5_2 = { features?(base64_0_5_2_features {}) }: base64_0_5_2_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 ]);
  };
  base64_0_5_2_features = f: updateFeatures f (rec {
    base64_0_5_2.default = (f.base64_0_5_2.default or true);
    byteorder_1_2_1.default = true;
  }) [ byteorder_1_2_1_features ];
  bitflags_0_5_0 = { features?(bitflags_0_5_0_features {}) }: bitflags_0_5_0_ {
    features = mkFeatures (features.bitflags_0_5_0 or {});
  };
  bitflags_0_5_0_features = f: updateFeatures f (rec {
    bitflags_0_5_0.default = (f.bitflags_0_5_0.default or true);
  }) [];
  bitflags_1_0_1 = { features?(bitflags_1_0_1_features {}) }: bitflags_1_0_1_ {
    features = mkFeatures (features.bitflags_1_0_1 or {});
  };
  bitflags_1_0_1_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = (f.bitflags_1_0_1.default or true);
    bitflags_1_0_1.example_generated =
      (f.bitflags_1_0_1.example_generated or false) ||
      (f.bitflags_1_0_1.default or false) ||
      (bitflags_1_0_1.default or false);
  }) [];
  block_0_1_6 = { features?(block_0_1_6_features {}) }: block_0_1_6_ {};
  block_0_1_6_features = f: updateFeatures f (rec {
    block_0_1_6.default = (f.block_0_1_6.default or true);
  }) [];
  boolinator_2_4_0 = { features?(boolinator_2_4_0_features {}) }: boolinator_2_4_0_ {};
  boolinator_2_4_0_features = f: updateFeatures f (rec {
    boolinator_2_4_0.default = (f.boolinator_2_4_0.default or true);
  }) [];
  byteorder_1_2_1 = { features?(byteorder_1_2_1_features {}) }: byteorder_1_2_1_ {
    features = mkFeatures (features.byteorder_1_2_1 or {});
  };
  byteorder_1_2_1_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = (f.byteorder_1_2_1.default or true);
    byteorder_1_2_1.std =
      (f.byteorder_1_2_1.std or false) ||
      (f.byteorder_1_2_1.default or false) ||
      (byteorder_1_2_1.default or false);
  }) [];
  cc_1_0_4 = { features?(cc_1_0_4_features {}) }: cc_1_0_4_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_4 or {});
  };
  cc_1_0_4_features = f: updateFeatures f (rec {
    cc_1_0_4.default = (f.cc_1_0_4.default or true);
    cc_1_0_4.rayon =
      (f.cc_1_0_4.rayon or false) ||
      (f.cc_1_0_4.parallel or false) ||
      (cc_1_0_4.parallel or false);
  }) [];
  cfg_if_0_1_2 = { features?(cfg_if_0_1_2_features {}) }: cfg_if_0_1_2_ {};
  cfg_if_0_1_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = (f.cfg_if_0_1_2.default or true);
  }) [];
  chrono_0_3_0 = { features?(chrono_0_3_0_features {}) }: chrono_0_3_0_ {
    dependencies = mapFeatures features ([ num_0_1_42 time_0_1_39 ]);
  };
  chrono_0_3_0_features = f: updateFeatures f (rec {
    chrono_0_3_0.default = (f.chrono_0_3_0.default or true);
    num_0_1_42.default = (f.num_0_1_42.default or false);
    time_0_1_39.default = true;
  }) [ num_0_1_42_features time_0_1_39_features ];
  chrono_0_4_0 = { features?(chrono_0_4_0_features {}) }: chrono_0_4_0_ {
    dependencies = mapFeatures features ([ num_0_1_42 time_0_1_39 ]);
  };
  chrono_0_4_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = (f.chrono_0_4_0.default or true);
    num_0_1_42.default = (f.num_0_1_42.default or false);
    time_0_1_39.default = true;
  }) [ num_0_1_42_features time_0_1_39_features ];
  clap_2_30_0 = { features?(clap_2_30_0_features {}) }: clap_2_30_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 textwrap_0_9_0 unicode_width_0_1_4 ]
      ++ (if features.clap_2_30_0.atty or false then [ atty_0_2_6 ] else [])
      ++ (if features.clap_2_30_0.strsim or false then [ strsim_0_7_0 ] else []))
      ++ (if !(kernel == "windows") then mapFeatures features ([ ]
      ++ (if features.clap_2_30_0.ansi_term or false then [ ansi_term_0_10_2 ] else [])) else []);
    features = mkFeatures (features.clap_2_30_0 or {});
  };
  clap_2_30_0_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = true;
    atty_0_2_6.default = true;
    bitflags_1_0_1.default = true;
    clap_2_30_0.ansi_term =
      (f.clap_2_30_0.ansi_term or false) ||
      (f.clap_2_30_0.color or false) ||
      (clap_2_30_0.color or false);
    clap_2_30_0.atty =
      (f.clap_2_30_0.atty or false) ||
      (f.clap_2_30_0.color or false) ||
      (clap_2_30_0.color or false);
    clap_2_30_0.clippy =
      (f.clap_2_30_0.clippy or false) ||
      (f.clap_2_30_0.lints or false) ||
      (clap_2_30_0.lints or false);
    clap_2_30_0.color =
      (f.clap_2_30_0.color or false) ||
      (f.clap_2_30_0.default or false) ||
      (clap_2_30_0.default or false);
    clap_2_30_0.default = (f.clap_2_30_0.default or true);
    clap_2_30_0.strsim =
      (f.clap_2_30_0.strsim or false) ||
      (f.clap_2_30_0.suggestions or false) ||
      (clap_2_30_0.suggestions or false);
    clap_2_30_0.suggestions =
      (f.clap_2_30_0.suggestions or false) ||
      (f.clap_2_30_0.default or false) ||
      (clap_2_30_0.default or false);
    clap_2_30_0.term_size =
      (f.clap_2_30_0.term_size or false) ||
      (f.clap_2_30_0.wrap_help or false) ||
      (clap_2_30_0.wrap_help or false);
    clap_2_30_0.vec_map =
      (f.clap_2_30_0.vec_map or false) ||
      (f.clap_2_30_0.default or false) ||
      (clap_2_30_0.default or false);
    clap_2_30_0.yaml =
      (f.clap_2_30_0.yaml or false) ||
      (f.clap_2_30_0.doc or false) ||
      (clap_2_30_0.doc or false);
    clap_2_30_0.yaml-rust =
      (f.clap_2_30_0.yaml-rust or false) ||
      (f.clap_2_30_0.yaml or false) ||
      (clap_2_30_0.yaml or false);
    strsim_0_7_0.default = true;
    textwrap_0_9_0.default = true;
    textwrap_0_9_0.term_size =
      (f.textwrap_0_9_0.term_size or false) ||
      (clap_2_30_0.wrap_help or false) ||
      (f.clap_2_30_0.wrap_help or false);
    unicode_width_0_1_4.default = true;
  }) [ atty_0_2_6_features bitflags_1_0_1_features strsim_0_7_0_features textwrap_0_9_0_features unicode_width_0_1_4_features ansi_term_0_10_2_features ];
  csv_0_15_0 = { features?(csv_0_15_0_features {}) }: csv_0_15_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_1 memchr_1_0_2 rustc_serialize_0_3_24 ]);
  };
  csv_0_15_0_features = f: updateFeatures f (rec {
    byteorder_1_2_1.default = true;
    csv_0_15_0.default = (f.csv_0_15_0.default or true);
    memchr_1_0_2.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ byteorder_1_2_1_features memchr_1_0_2_features rustc_serialize_0_3_24_features ];
  dbus_0_4_1 = { features?(dbus_0_4_1_features {}) }: dbus_0_4_1_ {
    dependencies = mapFeatures features ([ libc_0_2_36 ]);
    buildDependencies = mapFeatures features ([ pkg_config_0_3_9 ]);
  };
  dbus_0_4_1_features = f: updateFeatures f (rec {
    dbus_0_4_1.default = (f.dbus_0_4_1.default or true);
    libc_0_2_36.default = true;
    pkg_config_0_3_9.default = true;
  }) [ libc_0_2_36_features pkg_config_0_3_9_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  either_1_4_0 = { features?(either_1_4_0_features {}) }: either_1_4_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_4_0 or {});
  };
  either_1_4_0_features = f: updateFeatures f (rec {
    either_1_4_0.default = (f.either_1_4_0.default or true);
    either_1_4_0.use_std =
      (f.either_1_4_0.use_std or false) ||
      (f.either_1_4_0.default or false) ||
      (either_1_4_0.default or false);
  }) [];
  email_0_0_17 = { features?(email_0_0_17_features {}) }: email_0_0_17_ {
    dependencies = mapFeatures features ([ base64_0_5_2 chrono_0_3_0 encoding_0_2_33 lazy_static_0_2_11 rand_0_3_22 time_0_1_39 ]);
    buildDependencies = mapFeatures features ([ rustc_version_0_1_7 ]);
    features = mkFeatures (features.email_0_0_17 or {});
  };
  email_0_0_17_features = f: updateFeatures f (rec {
    base64_0_5_2.default = true;
    chrono_0_3_0.default = true;
    email_0_0_17.default = (f.email_0_0_17.default or true);
    encoding_0_2_33.default = true;
    lazy_static_0_2_11.default = true;
    rand_0_3_22.default = true;
    rustc_version_0_1_7.default = true;
    time_0_1_39.default = true;
  }) [ base64_0_5_2_features chrono_0_3_0_features encoding_0_2_33_features lazy_static_0_2_11_features rand_0_3_22_features time_0_1_39_features rustc_version_0_1_7_features ];
  encode_unicode_0_3_1 = { features?(encode_unicode_0_3_1_features {}) }: encode_unicode_0_3_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.encode_unicode_0_3_1 or {});
  };
  encode_unicode_0_3_1_features = f: updateFeatures f (rec {
    encode_unicode_0_3_1.default = (f.encode_unicode_0_3_1.default or true);
    encode_unicode_0_3_1.std =
      (f.encode_unicode_0_3_1.std or false) ||
      (f.encode_unicode_0_3_1.default or false) ||
      (encode_unicode_0_3_1.default or false);
  }) [];
  encoding_0_2_33 = { features?(encoding_0_2_33_features {}) }: encoding_0_2_33_ {
    dependencies = mapFeatures features ([ encoding_index_japanese_1_20141219_5 encoding_index_korean_1_20141219_5 encoding_index_simpchinese_1_20141219_5 encoding_index_singlebyte_1_20141219_5 encoding_index_tradchinese_1_20141219_5 ]);
  };
  encoding_0_2_33_features = f: updateFeatures f (rec {
    encoding_0_2_33.default = (f.encoding_0_2_33.default or true);
    encoding_index_japanese_1_20141219_5.default = true;
    encoding_index_korean_1_20141219_5.default = true;
    encoding_index_simpchinese_1_20141219_5.default = true;
    encoding_index_singlebyte_1_20141219_5.default = true;
    encoding_index_tradchinese_1_20141219_5.default = true;
  }) [ encoding_index_japanese_1_20141219_5_features encoding_index_korean_1_20141219_5_features encoding_index_simpchinese_1_20141219_5_features encoding_index_singlebyte_1_20141219_5_features encoding_index_tradchinese_1_20141219_5_features ];
  encoding_index_japanese_1_20141219_5 = { features?(encoding_index_japanese_1_20141219_5_features {}) }: encoding_index_japanese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_japanese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_japanese_1_20141219_5.default = (f.encoding_index_japanese_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_korean_1_20141219_5 = { features?(encoding_index_korean_1_20141219_5_features {}) }: encoding_index_korean_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_korean_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_korean_1_20141219_5.default = (f.encoding_index_korean_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_simpchinese_1_20141219_5 = { features?(encoding_index_simpchinese_1_20141219_5_features {}) }: encoding_index_simpchinese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_simpchinese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_simpchinese_1_20141219_5.default = (f.encoding_index_simpchinese_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_singlebyte_1_20141219_5 = { features?(encoding_index_singlebyte_1_20141219_5_features {}) }: encoding_index_singlebyte_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_singlebyte_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_singlebyte_1_20141219_5.default = (f.encoding_index_singlebyte_1_20141219_5.default or true);
    encoding_index_tests_0_1_4.default = true;
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_tradchinese_1_20141219_5 = { features?(encoding_index_tradchinese_1_20141219_5_features {}) }: encoding_index_tradchinese_1_20141219_5_ {
    dependencies = mapFeatures features ([ encoding_index_tests_0_1_4 ]);
  };
  encoding_index_tradchinese_1_20141219_5_features = f: updateFeatures f (rec {
    encoding_index_tests_0_1_4.default = true;
    encoding_index_tradchinese_1_20141219_5.default = (f.encoding_index_tradchinese_1_20141219_5.default or true);
  }) [ encoding_index_tests_0_1_4_features ];
  encoding_index_tests_0_1_4 = { features?(encoding_index_tests_0_1_4_features {}) }: encoding_index_tests_0_1_4_ {};
  encoding_index_tests_0_1_4_features = f: updateFeatures f (rec {
    encoding_index_tests_0_1_4.default = (f.encoding_index_tests_0_1_4.default or true);
  }) [];
  env_logger_0_5_3 = { features?(env_logger_0_5_3_features {}) }: env_logger_0_5_3_ {
    dependencies = mapFeatures features ([ atty_0_2_6 chrono_0_4_0 log_0_4_1 termcolor_0_3_4 ]
      ++ (if features.env_logger_0_5_3.regex or false then [ regex_0_2_6 ] else []));
    features = mkFeatures (features.env_logger_0_5_3 or {});
  };
  env_logger_0_5_3_features = f: updateFeatures f (rec {
    atty_0_2_6.default = true;
    chrono_0_4_0.default = true;
    env_logger_0_5_3.default = (f.env_logger_0_5_3.default or true);
    env_logger_0_5_3.regex =
      (f.env_logger_0_5_3.regex or false) ||
      (f.env_logger_0_5_3.default or false) ||
      (env_logger_0_5_3.default or false);
    log_0_4_1.default = true;
    log_0_4_1.std = true;
    regex_0_2_6.default = true;
    termcolor_0_3_4.default = true;
  }) [ atty_0_2_6_features chrono_0_4_0_features log_0_4_1_features regex_0_2_6_features termcolor_0_3_4_features ];
  error_chain_0_10_0 = { features?(error_chain_0_10_0_features {}) }: error_chain_0_10_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_10_0.backtrace or false then [ backtrace_0_3_5 ] else []));
    features = mkFeatures (features.error_chain_0_10_0 or {});
  };
  error_chain_0_10_0_features = f: updateFeatures f (rec {
    backtrace_0_3_5.default = true;
    error_chain_0_10_0.backtrace =
      (f.error_chain_0_10_0.backtrace or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
    error_chain_0_10_0.default = (f.error_chain_0_10_0.default or true);
    error_chain_0_10_0.example_generated =
      (f.error_chain_0_10_0.example_generated or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
  }) [ backtrace_0_3_5_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_11_0.backtrace or false then [ backtrace_0_3_5 ] else []));
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    backtrace_0_3_5.default = true;
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [ backtrace_0_3_5_features ];
  filters_0_2_0 = { features?(filters_0_2_0_features {}) }: filters_0_2_0_ {
    features = mkFeatures (features.filters_0_2_0 or {});
  };
  filters_0_2_0_features = f: updateFeatures f (rec {
    filters_0_2_0.default = (f.filters_0_2_0.default or true);
  }) [];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_1 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_1.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_1_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  gcc_0_3_54 = { features?(gcc_0_3_54_features {}) }: gcc_0_3_54_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.gcc_0_3_54 or {});
  };
  gcc_0_3_54_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = (f.gcc_0_3_54.default or true);
    gcc_0_3_54.rayon =
      (f.gcc_0_3_54.rayon or false) ||
      (f.gcc_0_3_54.parallel or false) ||
      (gcc_0_3_54.parallel or false);
  }) [];
  glob_0_2_11 = { features?(glob_0_2_11_features {}) }: glob_0_2_11_ {};
  glob_0_2_11_features = f: updateFeatures f (rec {
    glob_0_2_11.default = (f.glob_0_2_11.default or true);
  }) [];
  handlebars_0_29_1 = { features?(handlebars_0_29_1_features {}) }: handlebars_0_29_1_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 log_0_3_9 pest_0_3_3 quick_error_1_2_1 regex_0_2_6 serde_1_0_27 serde_json_1_0_9 ]);
  };
  handlebars_0_29_1_features = f: updateFeatures f (rec {
    handlebars_0_29_1.default = (f.handlebars_0_29_1.default or true);
    lazy_static_0_2_11.default = true;
    log_0_3_9.default = true;
    pest_0_3_3.default = true;
    quick_error_1_2_1.default = true;
    regex_0_2_6.default = true;
    serde_1_0_27.default = true;
    serde_json_1_0_9.default = true;
  }) [ lazy_static_0_2_11_features log_0_3_9_features pest_0_3_3_features quick_error_1_2_1_features regex_0_2_6_features serde_1_0_27_features serde_json_1_0_9_features ];
  hoedown_6_0_0 = { features?(hoedown_6_0_0_features {}) }: hoedown_6_0_0_ {
    dependencies = mapFeatures features ([ bitflags_0_5_0 libc_0_2_36 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 ]);
  };
  hoedown_6_0_0_features = f: updateFeatures f (rec {
    bitflags_0_5_0.default = true;
    gcc_0_3_54.default = true;
    hoedown_6_0_0.default = (f.hoedown_6_0_0.default or true);
    libc_0_2_36.default = true;
  }) [ bitflags_0_5_0_features libc_0_2_36_features gcc_0_3_54_features ];
  idna_0_1_4 = { features?(idna_0_1_4_features {}) }: idna_0_1_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 unicode_bidi_0_3_4 unicode_normalization_0_1_5 ]);
  };
  idna_0_1_4_features = f: updateFeatures f (rec {
    idna_0_1_4.default = (f.idna_0_1_4.default or true);
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_5.default = true;
  }) [ matches_0_1_6_features unicode_bidi_0_3_4_features unicode_normalization_0_1_5_features ];
  imag_0_7_0 = { features?(imag_0_7_0_features {}) }: imag_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 is_match_0_1_0 libimagerror_0_7_0 libimagrt_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 walkdir_1_0_7 ]);
  };
  imag_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_0_7_0.default = (f.imag_0_7_0.default or true);
    is_match_0_1_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    walkdir_1_0_7.default = true;
  }) [ clap_2_30_0_features is_match_0_1_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features walkdir_1_0_7_features ];
  imag_annotate_0_7_0 = { features?(imag_annotate_0_7_0_features {}) }: imag_annotate_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentryannotation_0_7_0 libimagentryedit_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 url_1_6_0 ]);
  };
  imag_annotate_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_annotate_0_7_0.default = (f.imag_annotate_0_7_0.default or true);
    libimagentryannotation_0_7_0.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    url_1_6_0.default = true;
  }) [ clap_2_30_0_features libimagentryannotation_0_7_0_features libimagentryedit_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features url_1_6_0_features ];
  imag_bookmark_0_7_0 = { features?(imag_bookmark_0_7_0_features {}) }: imag_bookmark_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagbookmark_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 ]);
  };
  imag_bookmark_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_bookmark_0_7_0.default = (f.imag_bookmark_0_7_0.default or true);
    libimagbookmark_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ clap_2_30_0_features libimagbookmark_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features ];
  imag_contact_0_7_0 = { features?(imag_contact_0_7_0_features {}) }: imag_contact_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 handlebars_0_29_1 libimagcontact_0_7_0 libimagentryedit_0_7_0 libimagentryref_0_7_0 libimagerror_0_7_0 libimaginteraction_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 uuid_0_6_0 vobject_0_4_2 walkdir_1_0_7 ]);
  };
  imag_contact_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    handlebars_0_29_1.default = true;
    imag_contact_0_7_0.default = (f.imag_contact_0_7_0.default or true);
    libimagcontact_0_7_0.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagentryref_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimaginteraction_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    uuid_0_6_0.default = true;
    uuid_0_6_0.v4 = true;
    vobject_0_4_2.default = true;
    walkdir_1_0_7.default = true;
  }) [ clap_2_30_0_features handlebars_0_29_1_features libimagcontact_0_7_0_features libimagentryedit_0_7_0_features libimagentryref_0_7_0_features libimagerror_0_7_0_features libimaginteraction_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features uuid_0_6_0_features vobject_0_4_2_features walkdir_1_0_7_features ];
  imag_diagnostics_0_7_0 = { features?(imag_diagnostics_0_7_0_features {}) }: imag_diagnostics_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentrylink_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  imag_diagnostics_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_diagnostics_0_7_0.default = (f.imag_diagnostics_0_7_0.default or true);
    libimagentrylink_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ clap_2_30_0_features libimagentrylink_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  imag_diary_0_7_0 = { features?(imag_diary_0_7_0_features {}) }: imag_diary_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 clap_2_30_0 libimagdiary_0_7_0 libimagentryedit_0_7_0 libimagerror_0_7_0 libimaginteraction_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagtimeui_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 ]);
  };
  imag_diary_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_diary_0_7_0.default = (f.imag_diary_0_7_0.default or true);
    libimagdiary_0_7_0.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimaginteraction_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagtimeui_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ chrono_0_4_0_features clap_2_30_0_features libimagdiary_0_7_0_features libimagentryedit_0_7_0_features libimagerror_0_7_0_features libimaginteraction_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagtimeui_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features ];
  imag_edit_0_7_0 = { features?(imag_edit_0_7_0_features {}) }: imag_edit_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentryedit_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_3_9 toml_0_4_5 toml_query_0_4_0 version_2_0_1 ]);
  };
  imag_edit_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_edit_0_7_0.default = (f.imag_edit_0_7_0.default or true);
    libimagentryedit_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_3_9.default = true;
    toml_0_4_5.default = true;
    toml_query_0_4_0.default = true;
    version_2_0_1.default = true;
  }) [ clap_2_30_0_features libimagentryedit_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_3_9_features toml_0_4_5_features toml_query_0_4_0_features version_2_0_1_features ];
  imag_gps_0_7_0 = { features?(imag_gps_0_7_0_features {}) }: imag_gps_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentrygps_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 url_1_6_0 ]);
  };
  imag_gps_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_gps_0_7_0.default = (f.imag_gps_0_7_0.default or true);
    libimagentrygps_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    url_1_6_0.default = true;
  }) [ clap_2_30_0_features libimagentrygps_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features url_1_6_0_features ];
  imag_grep_0_7_0 = { features?(imag_grep_0_7_0_features {}) }: imag_grep_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 log_0_4_1 regex_0_2_6 ]);
  };
  imag_grep_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_grep_0_7_0.default = (f.imag_grep_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    regex_0_2_6.default = true;
  }) [ clap_2_30_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features regex_0_2_6_features ];
  imag_habit_0_7_0 = { features?(imag_habit_0_7_0_features {}) }: imag_habit_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 clap_2_30_0 kairos_0_1_0 libimagentryedit_0_7_0 libimagerror_0_7_0 libimaghabit_0_7_0 libimaginteraction_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagtimeui_0_7_0 libimagutil_0_7_0 log_0_3_9 prettytable_rs_0_6_7 toml_0_4_5 toml_query_0_6_0 ]);
  };
  imag_habit_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_habit_0_7_0.default = (f.imag_habit_0_7_0.default or true);
    kairos_0_1_0.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimaghabit_0_7_0.default = true;
    libimaginteraction_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagtimeui_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_3_9.default = true;
    prettytable_rs_0_6_7.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ chrono_0_4_0_features clap_2_30_0_features kairos_0_1_0_features libimagentryedit_0_7_0_features libimagerror_0_7_0_features libimaghabit_0_7_0_features libimaginteraction_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagtimeui_0_7_0_features libimagutil_0_7_0_features log_0_3_9_features prettytable_rs_0_6_7_features toml_0_4_5_features toml_query_0_6_0_features ];
  imag_ids_0_7_0 = { features?(imag_ids_0_7_0_features {}) }: imag_ids_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 ]);
  };
  imag_ids_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_ids_0_7_0.default = (f.imag_ids_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
  }) [ clap_2_30_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features ];
  imag_init_0_7_0 = { features?(imag_init_0_7_0_features {}) }: imag_init_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagerror_0_7_0 libimagrt_0_7_0 ]);
  };
  imag_init_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_init_0_7_0.default = (f.imag_init_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
  }) [ clap_2_30_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features ];
  imag_link_0_7_0 = { features?(imag_link_0_7_0_features {}) }: imag_link_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentrylink_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 url_1_6_0 ]);
  };
  imag_link_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_link_0_7_0.default = (f.imag_link_0_7_0.default or true);
    libimagentrylink_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    url_1_6_0.default = true;
  }) [ clap_2_30_0_features libimagentrylink_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features url_1_6_0_features ];
  imag_log_0_7_0 = { features?(imag_log_0_7_0_features {}) }: imag_log_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 is_match_0_1_0 libimagdiary_0_7_0 libimagerror_0_7_0 libimaglog_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 log_0_3_9 toml_0_4_5 toml_query_0_6_0 ]);
  };
  imag_log_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_log_0_7_0.default = (f.imag_log_0_7_0.default or true);
    is_match_0_1_0.default = true;
    libimagdiary_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimaglog_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_3_9.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ clap_2_30_0_features is_match_0_1_0_features libimagdiary_0_7_0_features libimagerror_0_7_0_features libimaglog_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features log_0_3_9_features toml_0_4_5_features toml_query_0_6_0_features ];
  imag_mail_0_7_0 = { features?(imag_mail_0_7_0_features {}) }: imag_mail_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagerror_0_7_0 libimagmail_0_7_0 libimagrt_0_7_0 libimagutil_0_7_0 log_0_4_1 ]);
  };
  imag_mail_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_mail_0_7_0.default = (f.imag_mail_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagmail_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
  }) [ clap_2_30_0_features libimagerror_0_7_0_features libimagmail_0_7_0_features libimagrt_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features ];
  imag_mv_0_7_0 = { features?(imag_mv_0_7_0_features {}) }: imag_mv_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentrylink_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 log_0_4_1 ]);
  };
  imag_mv_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_mv_0_7_0.default = (f.imag_mv_0_7_0.default or true);
    libimagentrylink_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
  }) [ clap_2_30_0_features libimagentrylink_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features ];
  imag_notes_0_7_0 = { features?(imag_notes_0_7_0_features {}) }: imag_notes_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 itertools_0_7_6 libimagentryedit_0_7_0 libimagerror_0_7_0 libimagnotes_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 ]);
  };
  imag_notes_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_notes_0_7_0.default = (f.imag_notes_0_7_0.default or true);
    itertools_0_7_6.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagnotes_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
  }) [ clap_2_30_0_features itertools_0_7_6_features libimagentryedit_0_7_0_features libimagerror_0_7_0_features libimagnotes_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features ];
  imag_ref_0_7_0 = { features?(imag_ref_0_7_0_features {}) }: imag_ref_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentryref_0_7_0 libimagerror_0_7_0 libimaginteraction_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 ]);
  };
  imag_ref_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_ref_0_7_0.default = (f.imag_ref_0_7_0.default or true);
    libimagentryref_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimaginteraction_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
  }) [ clap_2_30_0_features libimagentryref_0_7_0_features libimagerror_0_7_0_features libimaginteraction_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features ];
  imag_store_0_7_0 = { features?(imag_store_0_7_0_features {}) }: imag_store_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 error_chain_0_11_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 ]);
    features = mkFeatures (features.imag_store_0_7_0 or {});
  };
  imag_store_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    error_chain_0_11_0.default = true;
    imag_store_0_7_0.default = (f.imag_store_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagstore_0_7_0.early-panic =
      (f.libimagstore_0_7_0.early-panic or false) ||
      (imag_store_0_7_0.early-panic or false) ||
      (f.imag_store_0_7_0.early-panic or false);
    libimagstore_0_7_0.verify = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
  }) [ clap_2_30_0_features error_chain_0_11_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features ];
  imag_tag_0_7_0 = { features?(imag_tag_0_7_0_features {}) }: imag_tag_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 libimagentrytag_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 ]);
  };
  imag_tag_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_tag_0_7_0.default = (f.imag_tag_0_7_0.default or true);
    libimagentrytag_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
  }) [ clap_2_30_0_features libimagentrytag_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features ];
  imag_timetrack_0_7_0 = { features?(imag_timetrack_0_7_0_features {}) }: imag_timetrack_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 clap_2_30_0 filters_0_2_0 itertools_0_7_6 kairos_0_1_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagtimetrack_0_7_0 libimagutil_0_7_0 log_0_4_1 prettytable_rs_0_6_7 ]);
  };
  imag_timetrack_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    filters_0_2_0.default = true;
    imag_timetrack_0_7_0.default = (f.imag_timetrack_0_7_0.default or true);
    itertools_0_7_6.default = true;
    kairos_0_1_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagtimetrack_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    prettytable_rs_0_6_7.default = true;
  }) [ chrono_0_4_0_features clap_2_30_0_features filters_0_2_0_features itertools_0_7_6_features kairos_0_1_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagtimetrack_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features prettytable_rs_0_6_7_features ];
  imag_todo_0_7_0 = { features?(imag_todo_0_7_0_features {}) }: imag_todo_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 is_match_0_1_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagtodo_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 ]);
  };
  imag_todo_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    imag_todo_0_7_0.default = (f.imag_todo_0_7_0.default or true);
    is_match_0_1_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagtodo_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ clap_2_30_0_features is_match_0_1_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagtodo_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features ];
  imag_view_0_7_0 = { features?(imag_view_0_7_0_features {}) }: imag_view_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 handlebars_0_29_1 libimagentryview_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 log_0_4_1 tempfile_2_2_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  imag_view_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    handlebars_0_29_1.default = true;
    imag_view_0_7_0.default = (f.imag_view_0_7_0.default or true);
    libimagentryview_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    tempfile_2_2_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ clap_2_30_0_features handlebars_0_29_1_features libimagentryview_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features tempfile_2_2_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  interactor_0_1_1 = { features?(interactor_0_1_1_features {}) }: interactor_0_1_1_ {
    dependencies = mapFeatures features ([ libc_0_2_36 termios_0_3_0 ]);
  };
  interactor_0_1_1_features = f: updateFeatures f (rec {
    interactor_0_1_1.default = (f.interactor_0_1_1.default or true);
    libc_0_2_36.default = true;
    termios_0_3_0.default = true;
  }) [ libc_0_2_36_features termios_0_3_0_features ];
  is_match_0_1_0 = { features?(is_match_0_1_0_features {}) }: is_match_0_1_0_ {};
  is_match_0_1_0_features = f: updateFeatures f (rec {
    is_match_0_1_0.default = (f.is_match_0_1_0.default or true);
  }) [];
  iso8601_0_2_0 = { features?(iso8601_0_2_0_features {}) }: iso8601_0_2_0_ {
    dependencies = mapFeatures features ([ nom_3_2_1 ]);
  };
  iso8601_0_2_0_features = f: updateFeatures f (rec {
    iso8601_0_2_0.default = (f.iso8601_0_2_0.default or true);
    nom_3_2_1.default = true;
  }) [ nom_3_2_1_features ];
  itertools_0_7_6 = { features?(itertools_0_7_6_features {}) }: itertools_0_7_6_ {
    dependencies = mapFeatures features ([ either_1_4_0 ]);
    features = mkFeatures (features.itertools_0_7_6 or {});
  };
  itertools_0_7_6_features = f: updateFeatures f (rec {
    either_1_4_0.default = (f.either_1_4_0.default or false);
    itertools_0_7_6.default = (f.itertools_0_7_6.default or true);
    itertools_0_7_6.use_std =
      (f.itertools_0_7_6.use_std or false) ||
      (f.itertools_0_7_6.default or false) ||
      (itertools_0_7_6.default or false);
  }) [ either_1_4_0_features ];
  itoa_0_3_4 = { features?(itoa_0_3_4_features {}) }: itoa_0_3_4_ {
    features = mkFeatures (features.itoa_0_3_4 or {});
  };
  itoa_0_3_4_features = f: updateFeatures f (rec {
    itoa_0_3_4.default = (f.itoa_0_3_4.default or true);
  }) [];
  kairos_0_1_0 = { features?(kairos_0_1_0_features {}) }: kairos_0_1_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 error_chain_0_11_0 iso8601_0_2_0 nom_3_2_1 ]);
    features = mkFeatures (features.kairos_0_1_0 or {});
  };
  kairos_0_1_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    error_chain_0_11_0.default = true;
    iso8601_0_2_0.default = true;
    kairos_0_1_0.default = (f.kairos_0_1_0.default or true);
    kairos_0_1_0.filters =
      (f.kairos_0_1_0.filters or false) ||
      (f.kairos_0_1_0.with-filters or false) ||
      (kairos_0_1_0.with-filters or false);
    nom_3_2_1.default = true;
  }) [ chrono_0_4_0_features error_chain_0_11_0_features iso8601_0_2_0_features nom_3_2_1_features ];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  libc_0_2_36 = { features?(libc_0_2_36_features {}) }: libc_0_2_36_ {
    features = mkFeatures (features.libc_0_2_36 or {});
  };
  libc_0_2_36_features = f: updateFeatures f (rec {
    libc_0_2_36.default = (f.libc_0_2_36.default or true);
    libc_0_2_36.use_std =
      (f.libc_0_2_36.use_std or false) ||
      (f.libc_0_2_36.default or false) ||
      (libc_0_2_36.default or false);
  }) [];
  libimagbookmark_0_7_0 = { features?(libimagbookmark_0_7_0_features {}) }: libimagbookmark_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagentrylink_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 regex_0_2_6 url_1_6_0 ]);
  };
  libimagbookmark_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagbookmark_0_7_0.default = (f.libimagbookmark_0_7_0.default or true);
    libimagentrylink_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    regex_0_2_6.default = true;
    url_1_6_0.default = true;
  }) [ error_chain_0_11_0_features libimagentrylink_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features regex_0_2_6_features url_1_6_0_features ];
  libimagcontact_0_7_0 = { features?(libimagcontact_0_7_0_features {}) }: libimagcontact_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagentryref_0_7_0 libimagentryutil_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 log_0_3_9 toml_0_4_5 toml_query_0_4_0 uuid_0_6_0 vobject_0_4_2 ]);
  };
  libimagcontact_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagcontact_0_7_0.default = (f.libimagcontact_0_7_0.default or true);
    libimagentryref_0_7_0.default = (f.libimagentryref_0_7_0.default or false);
    libimagentryref_0_7_0.generators = true;
    libimagentryref_0_7_0.generators-sha1 = true;
    libimagentryutil_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_3_9.default = true;
    toml_0_4_5.default = true;
    toml_query_0_4_0.default = true;
    uuid_0_6_0.default = true;
    uuid_0_6_0.v4 = true;
    vobject_0_4_2.default = true;
  }) [ error_chain_0_11_0_features libimagentryref_0_7_0_features libimagentryutil_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features log_0_3_9_features toml_0_4_5_features toml_query_0_4_0_features uuid_0_6_0_features vobject_0_4_2_features ];
  libimagdiary_0_7_0 = { features?(libimagdiary_0_7_0_features {}) }: libimagdiary_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 error_chain_0_11_0 filters_0_2_0 itertools_0_7_6 libimagentryedit_0_7_0 libimagentryutil_0_7_0 libimagentryview_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagdiary_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    error_chain_0_11_0.default = true;
    filters_0_2_0.default = true;
    itertools_0_7_6.default = true;
    libimagdiary_0_7_0.default = (f.libimagdiary_0_7_0.default or true);
    libimagentryedit_0_7_0.default = true;
    libimagentryutil_0_7_0.default = true;
    libimagentryview_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ chrono_0_4_0_features error_chain_0_11_0_features filters_0_2_0_features itertools_0_7_6_features libimagentryedit_0_7_0_features libimagentryutil_0_7_0_features libimagentryview_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentryannotation_0_7_0 = { features?(libimagentryannotation_0_7_0_features {}) }: libimagentryannotation_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 lazy_static_0_2_11 libimagentrylink_0_7_0 libimagentryutil_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagentryannotation_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    lazy_static_0_2_11.default = true;
    libimagentryannotation_0_7_0.default = (f.libimagentryannotation_0_7_0.default or true);
    libimagentrylink_0_7_0.default = true;
    libimagentryutil_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ error_chain_0_11_0_features lazy_static_0_2_11_features libimagentrylink_0_7_0_features libimagentryutil_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentrycategory_0_7_0 = { features?(libimagentrycategory_0_7_0_features {}) }: libimagentrycategory_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 is_match_0_1_0 libimagerror_0_7_0 libimagstore_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagentrycategory_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    is_match_0_1_0.default = true;
    libimagentrycategory_0_7_0.default = (f.libimagentrycategory_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ error_chain_0_11_0_features is_match_0_1_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentrydatetime_0_7_0 = { features?(libimagentrydatetime_0_7_0_features {}) }: libimagentrydatetime_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 error_chain_0_11_0 lazy_static_0_2_11 libimagerror_0_7_0 libimagstore_0_7_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagentrydatetime_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    error_chain_0_11_0.default = true;
    lazy_static_0_2_11.default = true;
    libimagentrydatetime_0_7_0.default = (f.libimagentrydatetime_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ chrono_0_4_0_features error_chain_0_11_0_features lazy_static_0_2_11_features libimagerror_0_7_0_features libimagstore_0_7_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentryedit_0_7_0 = { features?(libimagentryedit_0_7_0_features {}) }: libimagentryedit_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 ]);
  };
  libimagentryedit_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagentryedit_0_7_0.default = (f.libimagentryedit_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
  }) [ error_chain_0_11_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features ];
  libimagentryfilter_0_7_0 = { features?(libimagentryfilter_0_7_0_features {}) }: libimagentryfilter_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 filters_0_2_0 itertools_0_7_6 libimagentrytag_0_7_0 libimagstore_0_7_0 log_0_4_1 regex_0_2_6 semver_0_8_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagentryfilter_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    filters_0_2_0.default = true;
    itertools_0_7_6.default = true;
    libimagentryfilter_0_7_0.default = (f.libimagentryfilter_0_7_0.default or true);
    libimagentrytag_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    regex_0_2_6.default = true;
    semver_0_8_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ clap_2_30_0_features filters_0_2_0_features itertools_0_7_6_features libimagentrytag_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features regex_0_2_6_features semver_0_8_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentrygps_0_7_0 = { features?(libimagentrygps_0_7_0_features {}) }: libimagentrygps_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagerror_0_7_0 libimagstore_0_7_0 serde_1_0_27 serde_derive_1_0_27 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagentrygps_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagentrygps_0_7_0.default = (f.libimagentrygps_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    serde_1_0_27.default = true;
    serde_derive_1_0_27.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ error_chain_0_11_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features serde_1_0_27_features serde_derive_1_0_27_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentrylink_0_7_0 = { features?(libimagentrylink_0_7_0_features {}) }: libimagentrylink_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 is_match_0_1_0 itertools_0_7_6 libimagerror_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 rust_crypto_0_2_36 toml_0_4_5 toml_query_0_6_0 url_1_6_0 ]);
  };
  libimagentrylink_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    is_match_0_1_0.default = true;
    itertools_0_7_6.default = true;
    libimagentrylink_0_7_0.default = (f.libimagentrylink_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    rust_crypto_0_2_36.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    url_1_6_0.default = true;
  }) [ error_chain_0_11_0_features is_match_0_1_0_features itertools_0_7_6_features libimagerror_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features rust_crypto_0_2_36_features toml_0_4_5_features toml_query_0_6_0_features url_1_6_0_features ];
  libimagentrymarkdown_0_7_0 = { features?(libimagentrymarkdown_0_7_0_features {}) }: libimagentrymarkdown_0_7_0_ {
    dependencies = mapFeatures features ([ env_logger_0_5_3 error_chain_0_11_0 hoedown_6_0_0 libimagentrylink_0_7_0 libimagentryref_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 url_1_6_0 ]);
  };
  libimagentrymarkdown_0_7_0_features = f: updateFeatures f (rec {
    env_logger_0_5_3.default = true;
    error_chain_0_11_0.default = true;
    hoedown_6_0_0.default = true;
    libimagentrylink_0_7_0.default = true;
    libimagentrymarkdown_0_7_0.default = (f.libimagentrymarkdown_0_7_0.default or true);
    libimagentryref_0_7_0.default = (f.libimagentryref_0_7_0.default or false);
    libimagentryref_0_7_0.generators = true;
    libimagentryref_0_7_0.generators-sha512 = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    url_1_6_0.default = true;
  }) [ env_logger_0_5_3_features error_chain_0_11_0_features hoedown_6_0_0_features libimagentrylink_0_7_0_features libimagentryref_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features url_1_6_0_features ];
  libimagentryref_0_7_0 = { features?(libimagentryref_0_7_0_features {}) }: libimagentryref_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 itertools_0_7_6 libimagentryutil_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 ]
      ++ (if features.libimagentryref_0_7_0.rust-crypto or false then [ rust_crypto_0_2_36 ] else []));
    features = mkFeatures (features.libimagentryref_0_7_0 or {});
  };
  libimagentryref_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    itertools_0_7_6.default = true;
    libimagentryref_0_7_0.default = (f.libimagentryref_0_7_0.default or true);
    libimagentryref_0_7_0.rust-crypto =
      (f.libimagentryref_0_7_0.rust-crypto or false) ||
      (f.libimagentryref_0_7_0.generators-sha1 or false) ||
      (libimagentryref_0_7_0.generators-sha1 or false) ||
      (f.libimagentryref_0_7_0.generators-sha224 or false) ||
      (libimagentryref_0_7_0.generators-sha224 or false) ||
      (f.libimagentryref_0_7_0.generators-sha256 or false) ||
      (libimagentryref_0_7_0.generators-sha256 or false) ||
      (f.libimagentryref_0_7_0.generators-sha3 or false) ||
      (libimagentryref_0_7_0.generators-sha3 or false) ||
      (f.libimagentryref_0_7_0.generators-sha384 or false) ||
      (libimagentryref_0_7_0.generators-sha384 or false) ||
      (f.libimagentryref_0_7_0.generators-sha512 or false) ||
      (libimagentryref_0_7_0.generators-sha512 or false);
    libimagentryutil_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    rust_crypto_0_2_36.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ error_chain_0_11_0_features itertools_0_7_6_features libimagentryutil_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features rust_crypto_0_2_36_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentrytag_0_7_0 = { features?(libimagentrytag_0_7_0_features {}) }: libimagentrytag_0_7_0_ {
    dependencies = mapFeatures features ([ clap_2_30_0 error_chain_0_11_0 filters_0_2_0 is_match_0_1_0 itertools_0_7_6 libimagerror_0_7_0 libimagstore_0_7_0 log_0_4_1 regex_0_2_6 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagentrytag_0_7_0_features = f: updateFeatures f (rec {
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    error_chain_0_11_0.default = true;
    filters_0_2_0.default = true;
    is_match_0_1_0.default = true;
    itertools_0_7_6.default = true;
    libimagentrytag_0_7_0.default = (f.libimagentrytag_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    regex_0_2_6.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ clap_2_30_0_features error_chain_0_11_0_features filters_0_2_0_features is_match_0_1_0_features itertools_0_7_6_features libimagerror_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features regex_0_2_6_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentryutil_0_7_0 = { features?(libimagentryutil_0_7_0_features {}) }: libimagentryutil_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 filters_0_2_0 libimagerror_0_7_0 libimagstore_0_7_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagentryutil_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    filters_0_2_0.default = true;
    libimagentryutil_0_7_0.default = (f.libimagentryutil_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ error_chain_0_11_0_features filters_0_2_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagentryview_0_7_0 = { features?(libimagentryview_0_7_0_features {}) }: libimagentryview_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagentryedit_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 log_0_4_1 toml_0_4_5 ]);
  };
  libimagentryview_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagentryview_0_7_0.default = (f.libimagentryview_0_7_0.default or true);
    libimagerror_0_7_0.default = true;
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
  }) [ error_chain_0_11_0_features libimagentryedit_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features toml_0_4_5_features ];
  libimagerror_0_7_0 = { features?(libimagerror_0_7_0_features {}) }: libimagerror_0_7_0_ {
    dependencies = mapFeatures features ([ ansi_term_0_10_2 error_chain_0_11_0 log_0_4_1 ]);
  };
  libimagerror_0_7_0_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = true;
    error_chain_0_11_0.default = true;
    libimagerror_0_7_0.default = (f.libimagerror_0_7_0.default or true);
    log_0_4_1.default = true;
  }) [ ansi_term_0_10_2_features error_chain_0_11_0_features log_0_4_1_features ];
  libimaghabit_0_7_0 = { features?(libimaghabit_0_7_0_features {}) }: libimaghabit_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 error_chain_0_11_0 kairos_0_1_0 libimagentryedit_0_7_0 libimagentrylink_0_7_0 libimagentryutil_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_3_9 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimaghabit_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    error_chain_0_11_0.default = true;
    kairos_0_1_0.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagentrylink_0_7_0.default = true;
    libimagentryutil_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimaghabit_0_7_0.default = (f.libimaghabit_0_7_0.default or true);
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_3_9.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ chrono_0_4_0_features error_chain_0_11_0_features kairos_0_1_0_features libimagentryedit_0_7_0_features libimagentrylink_0_7_0_features libimagentryutil_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_3_9_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimaginteraction_0_7_0 = { features?(libimaginteraction_0_7_0_features {}) }: libimaginteraction_0_7_0_ {
    dependencies = mapFeatures features ([ ansi_term_0_10_2 clap_2_30_0 error_chain_0_11_0 handlebars_0_29_1 interactor_0_1_1 lazy_static_0_2_11 libimagerror_0_7_0 libimagstore_0_7_0 log_0_4_1 regex_0_2_6 serde_json_1_0_9 toml_0_4_5 ]);
  };
  libimaginteraction_0_7_0_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = true;
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    error_chain_0_11_0.default = true;
    handlebars_0_29_1.default = true;
    interactor_0_1_1.default = true;
    lazy_static_0_2_11.default = true;
    libimagerror_0_7_0.default = true;
    libimaginteraction_0_7_0.default = (f.libimaginteraction_0_7_0.default or true);
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    regex_0_2_6.default = true;
    serde_json_1_0_9.default = true;
    toml_0_4_5.default = true;
  }) [ ansi_term_0_10_2_features clap_2_30_0_features error_chain_0_11_0_features handlebars_0_29_1_features interactor_0_1_1_features lazy_static_0_2_11_features libimagerror_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features regex_0_2_6_features serde_json_1_0_9_features toml_0_4_5_features ];
  libimaglog_0_7_0 = { features?(libimaglog_0_7_0_features {}) }: libimaglog_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagdiary_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimaglog_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagdiary_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimaglog_0_7_0.default = (f.libimaglog_0_7_0.default or true);
    libimagstore_0_7_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ error_chain_0_11_0_features libimagdiary_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagmail_0_7_0 = { features?(libimagmail_0_7_0_features {}) }: libimagmail_0_7_0_ {
    dependencies = mapFeatures features ([ email_0_0_17 error_chain_0_11_0 filters_0_2_0 libimagentryref_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 log_0_4_1 ]);
  };
  libimagmail_0_7_0_features = f: updateFeatures f (rec {
    email_0_0_17.default = true;
    error_chain_0_11_0.default = true;
    filters_0_2_0.default = true;
    libimagentryref_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagmail_0_7_0.default = (f.libimagmail_0_7_0.default or true);
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
  }) [ email_0_0_17_features error_chain_0_11_0_features filters_0_2_0_features libimagentryref_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features ];
  libimagnotes_0_7_0 = { features?(libimagnotes_0_7_0_features {}) }: libimagnotes_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagentryedit_0_7_0 libimagerror_0_7_0 libimagrt_0_7_0 libimagstore_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagnotes_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagentryedit_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagnotes_0_7_0.default = (f.libimagnotes_0_7_0.default or true);
    libimagrt_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    log_0_4_1.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ error_chain_0_11_0_features libimagentryedit_0_7_0_features libimagerror_0_7_0_features libimagrt_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagnotification_0_7_0 = { features?(libimagnotification_0_7_0_features {}) }: libimagnotification_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagerror_0_7_0 notify_rust_3_4_2 ]);
  };
  libimagnotification_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagnotification_0_7_0.default = (f.libimagnotification_0_7_0.default or true);
    notify_rust_3_4_2.default = true;
  }) [ error_chain_0_11_0_features libimagerror_0_7_0_features notify_rust_3_4_2_features ];
  libimagrt_0_7_0 = { features?(libimagrt_0_7_0_features {}) }: libimagrt_0_7_0_ {
    dependencies = mapFeatures features ([ ansi_term_0_10_2 atty_0_2_6 clap_2_30_0 env_logger_0_5_3 error_chain_0_11_0 handlebars_0_29_1 is_match_0_1_0 itertools_0_7_6 libimagerror_0_7_0 libimaginteraction_0_7_0 libimagstore_0_7_0 libimagutil_0_7_0 log_0_4_1 toml_0_4_5 toml_query_0_6_0 xdg_basedir_1_0_0 ]);
    features = mkFeatures (features.libimagrt_0_7_0 or {});
  };
  libimagrt_0_7_0_features = f: updateFeatures f (rec {
    ansi_term_0_10_2.default = true;
    atty_0_2_6.default = true;
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    env_logger_0_5_3.default = true;
    error_chain_0_11_0.default = true;
    handlebars_0_29_1.default = true;
    is_match_0_1_0.default = true;
    itertools_0_7_6.default = true;
    libimagerror_0_7_0.default = true;
    libimaginteraction_0_7_0.default = true;
    libimagrt_0_7_0.default = (f.libimagrt_0_7_0.default or true);
    libimagstore_0_7_0.default = true;
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or false);
    log_0_4_1.std = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    xdg_basedir_1_0_0.default = true;
  }) [ ansi_term_0_10_2_features atty_0_2_6_features clap_2_30_0_features env_logger_0_5_3_features error_chain_0_11_0_features handlebars_0_29_1_features is_match_0_1_0_features itertools_0_7_6_features libimagerror_0_7_0_features libimaginteraction_0_7_0_features libimagstore_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features toml_0_4_5_features toml_query_0_6_0_features xdg_basedir_1_0_0_features ];
  libimagstore_0_7_0 = { features?(libimagstore_0_7_0_features {}) }: libimagstore_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 glob_0_2_11 is_match_0_1_0 libimagerror_0_7_0 libimagutil_0_7_0 log_0_4_1 regex_0_2_6 semver_0_8_0 serde_1_0_27 serde_derive_1_0_27 serde_json_1_0_9 toml_0_4_5 toml_query_0_6_0 walkdir_1_0_7 ]);
    features = mkFeatures (features.libimagstore_0_7_0 or {});
  };
  libimagstore_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    glob_0_2_11.default = true;
    is_match_0_1_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = (f.libimagstore_0_7_0.default or true);
    libimagutil_0_7_0.default = true;
    log_0_4_1.default = true;
    regex_0_2_6.default = true;
    semver_0_8_0.default = true;
    serde_1_0_27.default = true;
    serde_derive_1_0_27.default = true;
    serde_json_1_0_9.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    walkdir_1_0_7.default = true;
  }) [ error_chain_0_11_0_features glob_0_2_11_features is_match_0_1_0_features libimagerror_0_7_0_features libimagutil_0_7_0_features log_0_4_1_features regex_0_2_6_features semver_0_8_0_features serde_1_0_27_features serde_derive_1_0_27_features serde_json_1_0_9_features toml_0_4_5_features toml_query_0_6_0_features walkdir_1_0_7_features ];
  libimagtimetrack_0_7_0 = { features?(libimagtimetrack_0_7_0_features {}) }: libimagtimetrack_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 error_chain_0_11_0 filters_0_2_0 is_match_0_1_0 lazy_static_0_2_11 libimagentrydatetime_0_7_0 libimagentrytag_0_7_0 libimagerror_0_7_0 libimagstore_0_7_0 toml_0_4_5 toml_query_0_6_0 ]);
  };
  libimagtimetrack_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    error_chain_0_11_0.default = true;
    filters_0_2_0.default = true;
    is_match_0_1_0.default = true;
    lazy_static_0_2_11.default = true;
    libimagentrydatetime_0_7_0.default = true;
    libimagentrytag_0_7_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagtimetrack_0_7_0.default = (f.libimagtimetrack_0_7_0.default or true);
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
  }) [ chrono_0_4_0_features error_chain_0_11_0_features filters_0_2_0_features is_match_0_1_0_features lazy_static_0_2_11_features libimagentrydatetime_0_7_0_features libimagentrytag_0_7_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features toml_0_4_5_features toml_query_0_6_0_features ];
  libimagtimeui_0_7_0 = { features?(libimagtimeui_0_7_0_features {}) }: libimagtimeui_0_7_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 clap_2_30_0 lazy_static_0_2_11 log_0_4_1 regex_0_2_6 ]);
  };
  libimagtimeui_0_7_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    clap_2_30_0.color = true;
    clap_2_30_0.default = (f.clap_2_30_0.default or false);
    clap_2_30_0.suggestions = true;
    lazy_static_0_2_11.default = true;
    libimagtimeui_0_7_0.default = (f.libimagtimeui_0_7_0.default or true);
    log_0_4_1.default = true;
    regex_0_2_6.default = true;
  }) [ chrono_0_4_0_features clap_2_30_0_features lazy_static_0_2_11_features log_0_4_1_features regex_0_2_6_features ];
  libimagtodo_0_7_0 = { features?(libimagtodo_0_7_0_features {}) }: libimagtodo_0_7_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 libimagerror_0_7_0 libimagstore_0_7_0 log_0_4_1 serde_json_1_0_9 task_hookrs_0_4_0 toml_0_4_5 toml_query_0_6_0 uuid_0_6_0 ]);
  };
  libimagtodo_0_7_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    libimagerror_0_7_0.default = true;
    libimagstore_0_7_0.default = true;
    libimagtodo_0_7_0.default = (f.libimagtodo_0_7_0.default or true);
    log_0_4_1.default = true;
    serde_json_1_0_9.default = true;
    task_hookrs_0_4_0.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = true;
    uuid_0_6_0.default = true;
  }) [ error_chain_0_11_0_features libimagerror_0_7_0_features libimagstore_0_7_0_features log_0_4_1_features serde_json_1_0_9_features task_hookrs_0_4_0_features toml_0_4_5_features toml_query_0_6_0_features uuid_0_6_0_features ];
  libimagutil_0_7_0 = { features?(libimagutil_0_7_0_features {}) }: libimagutil_0_7_0_ {
    dependencies = mapFeatures features ([ boolinator_2_4_0 chrono_0_4_0 lazy_static_0_2_11 log_0_4_1 regex_0_2_6 tempfile_2_2_0 url_1_6_0 ]);
    features = mkFeatures (features.libimagutil_0_7_0 or {});
  };
  libimagutil_0_7_0_features = f: updateFeatures f (rec {
    boolinator_2_4_0.default = true;
    chrono_0_4_0.default = true;
    lazy_static_0_2_11.default = true;
    libimagutil_0_7_0.default = (f.libimagutil_0_7_0.default or true);
    log_0_4_1.default = true;
    regex_0_2_6.default = true;
    tempfile_2_2_0.default = true;
    url_1_6_0.default = true;
  }) [ boolinator_2_4_0_features chrono_0_4_0_features lazy_static_0_2_11_features log_0_4_1_features regex_0_2_6_features tempfile_2_2_0_features url_1_6_0_features ];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_1.default = true;
    log_0_4_1.max_level_debug =
      (f.log_0_4_1.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_1.max_level_error =
      (f.log_0_4_1.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_1.max_level_info =
      (f.log_0_4_1.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_1.max_level_off =
      (f.log_0_4_1.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_1.max_level_trace =
      (f.log_0_4_1.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_1.max_level_warn =
      (f.log_0_4_1.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_1.release_max_level_debug =
      (f.log_0_4_1.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_1.release_max_level_error =
      (f.log_0_4_1.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_1.release_max_level_info =
      (f.log_0_4_1.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_1.release_max_level_off =
      (f.log_0_4_1.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_1.release_max_level_trace =
      (f.log_0_4_1.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_1.release_max_level_warn =
      (f.log_0_4_1.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_1.std =
      (f.log_0_4_1.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_1_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_2 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_2.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_2_features ];
  mac_notification_sys_0_1_3 = { features?(mac_notification_sys_0_1_3_features {}) }: mac_notification_sys_0_1_3_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 error_chain_0_10_0 objc_foundation_0_1_1 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 ]);
  };
  mac_notification_sys_0_1_3_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    error_chain_0_10_0.default = true;
    gcc_0_3_54.default = true;
    mac_notification_sys_0_1_3.default = (f.mac_notification_sys_0_1_3.default or true);
    objc_foundation_0_1_1.default = true;
  }) [ chrono_0_4_0_features error_chain_0_10_0_features objc_foundation_0_1_1_features gcc_0_3_54_features ];
  malloc_buf_0_0_6 = { features?(malloc_buf_0_0_6_features {}) }: malloc_buf_0_0_6_ {
    dependencies = mapFeatures features ([ libc_0_2_36 ]);
  };
  malloc_buf_0_0_6_features = f: updateFeatures f (rec {
    libc_0_2_36.default = true;
    malloc_buf_0_0_6.default = (f.malloc_buf_0_0_6.default or true);
  }) [ libc_0_2_36_features ];
  matches_0_1_6 = { features?(matches_0_1_6_features {}) }: matches_0_1_6_ {};
  matches_0_1_6_features = f: updateFeatures f (rec {
    matches_0_1_6.default = (f.matches_0_1_6.default or true);
  }) [];
  memchr_1_0_2 = { features?(memchr_1_0_2_features {}) }: memchr_1_0_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_1_0_2.libc or false then [ libc_0_2_36 ] else []));
    features = mkFeatures (features.memchr_1_0_2 or {});
  };
  memchr_1_0_2_features = f: updateFeatures f (rec {
    libc_0_2_36.default = (f.libc_0_2_36.default or false);
    libc_0_2_36.use_std =
      (f.libc_0_2_36.use_std or false) ||
      (memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.use_std or false);
    memchr_1_0_2.default = (f.memchr_1_0_2.default or true);
    memchr_1_0_2.libc =
      (f.memchr_1_0_2.libc or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false) ||
      (f.memchr_1_0_2.use_std or false) ||
      (memchr_1_0_2.use_std or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (f.memchr_1_0_2.default or false) ||
      (memchr_1_0_2.default or false);
  }) [ libc_0_2_36_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_36 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_36.default = (f.libc_0_2_36.default or false);
    libc_0_2_36.use_std =
      (f.libc_0_2_36.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_36_features ];
  nom_3_2_1 = { features?(nom_3_2_1_features {}) }: nom_3_2_1_ {
    dependencies = mapFeatures features ([ memchr_1_0_2 ]);
    features = mkFeatures (features.nom_3_2_1 or {});
  };
  nom_3_2_1_features = f: updateFeatures f (rec {
    memchr_1_0_2.default = (f.memchr_1_0_2.default or false);
    memchr_1_0_2.use_std =
      (f.memchr_1_0_2.use_std or false) ||
      (nom_3_2_1.std or false) ||
      (f.nom_3_2_1.std or false);
    nom_3_2_1.compiler_error =
      (f.nom_3_2_1.compiler_error or false) ||
      (f.nom_3_2_1.nightly or false) ||
      (nom_3_2_1.nightly or false);
    nom_3_2_1.default = (f.nom_3_2_1.default or true);
    nom_3_2_1.lazy_static =
      (f.nom_3_2_1.lazy_static or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.regex =
      (f.nom_3_2_1.regex or false) ||
      (f.nom_3_2_1.regexp or false) ||
      (nom_3_2_1.regexp or false);
    nom_3_2_1.regexp =
      (f.nom_3_2_1.regexp or false) ||
      (f.nom_3_2_1.regexp_macros or false) ||
      (nom_3_2_1.regexp_macros or false);
    nom_3_2_1.std =
      (f.nom_3_2_1.std or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
    nom_3_2_1.stream =
      (f.nom_3_2_1.stream or false) ||
      (f.nom_3_2_1.default or false) ||
      (nom_3_2_1.default or false);
  }) [ memchr_1_0_2_features ];
  notify_rust_3_4_2 = { features?(notify_rust_3_4_2_features {}) }: notify_rust_3_4_2_ {
    dependencies = mapFeatures features ([ error_chain_0_10_0 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "darwin") then mapFeatures features ([ dbus_0_4_1 ]) else [])
      ++ (if kernel == "darwin" then mapFeatures features ([ mac_notification_sys_0_1_3 ]) else []);
    features = mkFeatures (features.notify_rust_3_4_2 or {});
  };
  notify_rust_3_4_2_features = f: updateFeatures f (rec {
    dbus_0_4_1.default = true;
    error_chain_0_10_0.default = true;
    mac_notification_sys_0_1_3.default = true;
    notify_rust_3_4_2.default = (f.notify_rust_3_4_2.default or true);
    notify_rust_3_4_2.image =
      (f.notify_rust_3_4_2.image or false) ||
      (f.notify_rust_3_4_2.images or false) ||
      (notify_rust_3_4_2.images or false);
    notify_rust_3_4_2.lazy_static =
      (f.notify_rust_3_4_2.lazy_static or false) ||
      (f.notify_rust_3_4_2.images or false) ||
      (notify_rust_3_4_2.images or false);
  }) [ error_chain_0_10_0_features dbus_0_4_1_features mac_notification_sys_0_1_3_features ];
  num_0_1_42 = { features?(num_0_1_42_features {}) }: num_0_1_42_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_iter_0_1_35 num_traits_0_2_0 ]);
    features = mkFeatures (features.num_0_1_42 or {});
  };
  num_0_1_42_features = f: updateFeatures f (rec {
    num_0_1_42.bigint =
      (f.num_0_1_42.bigint or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.complex =
      (f.num_0_1_42.complex or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.default = (f.num_0_1_42.default or true);
    num_0_1_42.num-bigint =
      (f.num_0_1_42.num-bigint or false) ||
      (f.num_0_1_42.bigint or false) ||
      (num_0_1_42.bigint or false);
    num_0_1_42.num-complex =
      (f.num_0_1_42.num-complex or false) ||
      (f.num_0_1_42.complex or false) ||
      (num_0_1_42.complex or false);
    num_0_1_42.num-rational =
      (f.num_0_1_42.num-rational or false) ||
      (f.num_0_1_42.rational or false) ||
      (num_0_1_42.rational or false);
    num_0_1_42.rational =
      (f.num_0_1_42.rational or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_0_1_42.rustc-serialize =
      (f.num_0_1_42.rustc-serialize or false) ||
      (f.num_0_1_42.default or false) ||
      (num_0_1_42.default or false);
    num_integer_0_1_36.default = true;
    num_iter_0_1_35.default = true;
    num_traits_0_2_0.default = true;
  }) [ num_integer_0_1_36_features num_iter_0_1_35_features num_traits_0_2_0_features ];
  num_integer_0_1_36 = { features?(num_integer_0_1_36_features {}) }: num_integer_0_1_36_ {
    dependencies = mapFeatures features ([ num_traits_0_2_0 ]);
    features = mkFeatures (features.num_integer_0_1_36 or {});
  };
  num_integer_0_1_36_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or true);
    num_integer_0_1_36.std =
      (f.num_integer_0_1_36.std or false) ||
      (f.num_integer_0_1_36.default or false) ||
      (num_integer_0_1_36.default or false);
    num_traits_0_2_0.default = (f.num_traits_0_2_0.default or false);
  }) [ num_traits_0_2_0_features ];
  num_iter_0_1_35 = { features?(num_iter_0_1_35_features {}) }: num_iter_0_1_35_ {
    dependencies = mapFeatures features ([ num_integer_0_1_36 num_traits_0_2_0 ]);
    features = mkFeatures (features.num_iter_0_1_35 or {});
  };
  num_iter_0_1_35_features = f: updateFeatures f (rec {
    num_integer_0_1_36.default = (f.num_integer_0_1_36.default or false);
    num_iter_0_1_35.default = (f.num_iter_0_1_35.default or true);
    num_iter_0_1_35.std =
      (f.num_iter_0_1_35.std or false) ||
      (f.num_iter_0_1_35.default or false) ||
      (num_iter_0_1_35.default or false);
    num_traits_0_2_0.default = (f.num_traits_0_2_0.default or false);
  }) [ num_integer_0_1_36_features num_traits_0_2_0_features ];
  num_traits_0_1_43 = { features?(num_traits_0_1_43_features {}) }: num_traits_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_0 ]);
  };
  num_traits_0_1_43_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or true);
    num_traits_0_2_0.default = true;
  }) [ num_traits_0_2_0_features ];
  num_traits_0_2_0 = { features?(num_traits_0_2_0_features {}) }: num_traits_0_2_0_ {
    features = mkFeatures (features.num_traits_0_2_0 or {});
  };
  num_traits_0_2_0_features = f: updateFeatures f (rec {
    num_traits_0_2_0.default = (f.num_traits_0_2_0.default or true);
    num_traits_0_2_0.std =
      (f.num_traits_0_2_0.std or false) ||
      (f.num_traits_0_2_0.default or false) ||
      (num_traits_0_2_0.default or false);
  }) [];
  objc_0_2_2 = { features?(objc_0_2_2_features {}) }: objc_0_2_2_ {
    dependencies = mapFeatures features ([ malloc_buf_0_0_6 ]);
    features = mkFeatures (features.objc_0_2_2 or {});
  };
  objc_0_2_2_features = f: updateFeatures f (rec {
    malloc_buf_0_0_6.default = true;
    objc_0_2_2.default = (f.objc_0_2_2.default or true);
    objc_0_2_2.objc_exception =
      (f.objc_0_2_2.objc_exception or false) ||
      (f.objc_0_2_2.exception or false) ||
      (objc_0_2_2.exception or false);
  }) [ malloc_buf_0_0_6_features ];
  objc_foundation_0_1_1 = { features?(objc_foundation_0_1_1_features {}) }: objc_foundation_0_1_1_ {
    dependencies = mapFeatures features ([ block_0_1_6 objc_0_2_2 objc_id_0_1_0 ]);
  };
  objc_foundation_0_1_1_features = f: updateFeatures f (rec {
    block_0_1_6.default = true;
    objc_0_2_2.default = true;
    objc_foundation_0_1_1.default = (f.objc_foundation_0_1_1.default or true);
    objc_id_0_1_0.default = true;
  }) [ block_0_1_6_features objc_0_2_2_features objc_id_0_1_0_features ];
  objc_id_0_1_0 = { features?(objc_id_0_1_0_features {}) }: objc_id_0_1_0_ {
    dependencies = mapFeatures features ([ objc_0_2_2 ]);
  };
  objc_id_0_1_0_features = f: updateFeatures f (rec {
    objc_0_2_2.default = true;
    objc_id_0_1_0.default = (f.objc_id_0_1_0.default or true);
  }) [ objc_0_2_2_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  pest_0_3_3 = { features?(pest_0_3_3_features {}) }: pest_0_3_3_ {};
  pest_0_3_3_features = f: updateFeatures f (rec {
    pest_0_3_3.default = (f.pest_0_3_3.default or true);
  }) [];
  pkg_config_0_3_9 = { features?(pkg_config_0_3_9_features {}) }: pkg_config_0_3_9_ {};
  pkg_config_0_3_9_features = f: updateFeatures f (rec {
    pkg_config_0_3_9.default = (f.pkg_config_0_3_9.default or true);
  }) [];
  prettytable_rs_0_6_7 = { features?(prettytable_rs_0_6_7_features {}) }: prettytable_rs_0_6_7_ {
    dependencies = mapFeatures features ([ atty_0_2_6 encode_unicode_0_3_1 lazy_static_0_2_11 term_0_4_6 unicode_width_0_1_4 ]
      ++ (if features.prettytable_rs_0_6_7.csv or false then [ csv_0_15_0 ] else []));
    features = mkFeatures (features.prettytable_rs_0_6_7 or {});
  };
  prettytable_rs_0_6_7_features = f: updateFeatures f (rec {
    atty_0_2_6.default = true;
    csv_0_15_0.default = true;
    encode_unicode_0_3_1.default = true;
    lazy_static_0_2_11.default = true;
    prettytable_rs_0_6_7.csv =
      (f.prettytable_rs_0_6_7.csv or false) ||
      (f.prettytable_rs_0_6_7.default or false) ||
      (prettytable_rs_0_6_7.default or false);
    prettytable_rs_0_6_7.default = (f.prettytable_rs_0_6_7.default or true);
    prettytable_rs_0_6_7.win_crlf =
      (f.prettytable_rs_0_6_7.win_crlf or false) ||
      (f.prettytable_rs_0_6_7.default or false) ||
      (prettytable_rs_0_6_7.default or false);
    term_0_4_6.default = true;
    unicode_width_0_1_4.default = true;
  }) [ atty_0_2_6_features csv_0_15_0_features encode_unicode_0_3_1_features lazy_static_0_2_11_features term_0_4_6_features unicode_width_0_1_4_features ];
  quick_error_1_2_1 = { features?(quick_error_1_2_1_features {}) }: quick_error_1_2_1_ {};
  quick_error_1_2_1_features = f: updateFeatures f (rec {
    quick_error_1_2_1.default = (f.quick_error_1_2_1.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_36 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_36.default = true;
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_3_22.i128_support =
      (f.rand_0_3_22.i128_support or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_4_2.default = true;
  }) [ libc_0_2_36_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_36 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_36.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntsecapi = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_36_features winapi_0_3_4_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_37 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_37_features ];
  regex_0_2_6 = { features?(regex_0_2_6_features {}) }: regex_0_2_6_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_4 memchr_2_0_1 regex_syntax_0_4_2 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_6 or {});
  };
  regex_0_2_6_features = f: updateFeatures f (rec {
    aho_corasick_0_6_4.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_6.default = (f.regex_0_2_6.default or true);
    regex_0_2_6.simd =
      (f.regex_0_2_6.simd or false) ||
      (f.regex_0_2_6.simd-accel or false) ||
      (regex_0_2_6.simd-accel or false);
    regex_syntax_0_4_2.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_4_features memchr_2_0_1_features regex_syntax_0_4_2_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_4_2 = { features?(regex_syntax_0_4_2_features {}) }: regex_syntax_0_4_2_ {};
  regex_syntax_0_4_2_features = f: updateFeatures f (rec {
    regex_syntax_0_4_2.default = (f.regex_syntax_0_4_2.default or true);
  }) [];
  remove_dir_all_0_3_0 = { features?(remove_dir_all_0_3_0_features {}) }: remove_dir_all_0_3_0_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]);
  };
  remove_dir_all_0_3_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    remove_dir_all_0_3_0.default = (f.remove_dir_all_0_3_0.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  rust_crypto_0_2_36 = { features?(rust_crypto_0_2_36_features {}) }: rust_crypto_0_2_36_ {
    dependencies = mapFeatures features ([ libc_0_2_36 rand_0_3_22 rustc_serialize_0_3_24 time_0_1_39 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 ]);
    features = mkFeatures (features.rust_crypto_0_2_36 or {});
  };
  rust_crypto_0_2_36_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = true;
    libc_0_2_36.default = true;
    rand_0_3_22.default = true;
    rust_crypto_0_2_36.default = (f.rust_crypto_0_2_36.default or true);
    rustc_serialize_0_3_24.default = true;
    time_0_1_39.default = true;
  }) [ libc_0_2_36_features rand_0_3_22_features rustc_serialize_0_3_24_features time_0_1_39_features gcc_0_3_54_features ];
  rustc_demangle_0_1_6 = { features?(rustc_demangle_0_1_6_features {}) }: rustc_demangle_0_1_6_ {};
  rustc_demangle_0_1_6_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_6.default = (f.rustc_demangle_0_1_6.default or true);
  }) [];
  rustc_serialize_0_3_24 = { features?(rustc_serialize_0_3_24_features {}) }: rustc_serialize_0_3_24_ {};
  rustc_serialize_0_3_24_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = (f.rustc_serialize_0_3_24.default or true);
  }) [];
  rustc_version_0_1_7 = { features?(rustc_version_0_1_7_features {}) }: rustc_version_0_1_7_ {
    dependencies = mapFeatures features ([ semver_0_1_20 ]);
  };
  rustc_version_0_1_7_features = f: updateFeatures f (rec {
    rustc_version_0_1_7.default = (f.rustc_version_0_1_7.default or true);
    semver_0_1_20.default = true;
  }) [ semver_0_1_20_features ];
  same_file_0_1_3 = { features?(same_file_0_1_3_features {}) }: same_file_0_1_3_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  same_file_0_1_3_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    same_file_0_1_3.default = (f.same_file_0_1_3.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  semver_0_1_20 = { features?(semver_0_1_20_features {}) }: semver_0_1_20_ {};
  semver_0_1_20_features = f: updateFeatures f (rec {
    semver_0_1_20.default = (f.semver_0_1_20.default or true);
  }) [];
  semver_0_8_0 = { features?(semver_0_8_0_features {}) }: semver_0_8_0_ {
    dependencies = mapFeatures features ([ semver_parser_0_7_0 ]);
    features = mkFeatures (features.semver_0_8_0 or {});
  };
  semver_0_8_0_features = f: updateFeatures f (rec {
    semver_0_8_0.default = (f.semver_0_8_0.default or true);
    semver_0_8_0.serde =
      (f.semver_0_8_0.serde or false) ||
      (f.semver_0_8_0.ci or false) ||
      (semver_0_8_0.ci or false);
    semver_parser_0_7_0.default = true;
  }) [ semver_parser_0_7_0_features ];
  semver_parser_0_7_0 = { features?(semver_parser_0_7_0_features {}) }: semver_parser_0_7_0_ {};
  semver_parser_0_7_0_features = f: updateFeatures f (rec {
    semver_parser_0_7_0.default = (f.semver_parser_0_7_0.default or true);
  }) [];
  serde_1_0_27 = { features?(serde_1_0_27_features {}) }: serde_1_0_27_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_27 or {});
  };
  serde_1_0_27_features = f: updateFeatures f (rec {
    serde_1_0_27.default = (f.serde_1_0_27.default or true);
    serde_1_0_27.serde_derive =
      (f.serde_1_0_27.serde_derive or false) ||
      (f.serde_1_0_27.derive or false) ||
      (serde_1_0_27.derive or false) ||
      (f.serde_1_0_27.playground or false) ||
      (serde_1_0_27.playground or false);
    serde_1_0_27.std =
      (f.serde_1_0_27.std or false) ||
      (f.serde_1_0_27.default or false) ||
      (serde_1_0_27.default or false);
    serde_1_0_27.unstable =
      (f.serde_1_0_27.unstable or false) ||
      (f.serde_1_0_27.alloc or false) ||
      (serde_1_0_27.alloc or false);
  }) [];
  serde_derive_1_0_27 = { features?(serde_derive_1_0_27_features {}) }: serde_derive_1_0_27_ {
    dependencies = mapFeatures features ([ quote_0_3_15 serde_derive_internals_0_19_0 syn_0_11_11 ]);
    features = mkFeatures (features.serde_derive_1_0_27 or {});
  };
  serde_derive_1_0_27_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    serde_derive_1_0_27.default = (f.serde_derive_1_0_27.default or true);
    serde_derive_internals_0_19_0.default = (f.serde_derive_internals_0_19_0.default or false);
    syn_0_11_11.default = true;
    syn_0_11_11.visit = true;
  }) [ quote_0_3_15_features serde_derive_internals_0_19_0_features syn_0_11_11_features ];
  serde_derive_internals_0_19_0 = { features?(serde_derive_internals_0_19_0_features {}) }: serde_derive_internals_0_19_0_ {
    dependencies = mapFeatures features ([ syn_0_11_11 synom_0_11_3 ]);
  };
  serde_derive_internals_0_19_0_features = f: updateFeatures f (rec {
    serde_derive_internals_0_19_0.default = (f.serde_derive_internals_0_19_0.default or true);
    syn_0_11_11.default = (f.syn_0_11_11.default or false);
    syn_0_11_11.parsing = true;
    synom_0_11_3.default = true;
  }) [ syn_0_11_11_features synom_0_11_3_features ];
  serde_json_1_0_9 = { features?(serde_json_1_0_9_features {}) }: serde_json_1_0_9_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_3_4 num_traits_0_1_43 serde_1_0_27 ]);
    features = mkFeatures (features.serde_json_1_0_9 or {});
  };
  serde_json_1_0_9_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_3_4.default = true;
    num_traits_0_1_43.default = true;
    serde_1_0_27.default = true;
    serde_json_1_0_9.default = (f.serde_json_1_0_9.default or true);
    serde_json_1_0_9.linked-hash-map =
      (f.serde_json_1_0_9.linked-hash-map or false) ||
      (f.serde_json_1_0_9.preserve_order or false) ||
      (serde_json_1_0_9.preserve_order or false);
  }) [ dtoa_0_4_2_features itoa_0_3_4_features num_traits_0_1_43_features serde_1_0_27_features ];
  strsim_0_7_0 = { features?(strsim_0_7_0_features {}) }: strsim_0_7_0_ {};
  strsim_0_7_0_features = f: updateFeatures f (rec {
    strsim_0_7_0.default = (f.strsim_0_7_0.default or true);
  }) [];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  task_hookrs_0_4_0 = { features?(task_hookrs_0_4_0_features {}) }: task_hookrs_0_4_0_ {
    dependencies = mapFeatures features ([ chrono_0_4_0 serde_1_0_27 serde_derive_1_0_27 serde_json_1_0_9 uuid_0_6_0 ]);
  };
  task_hookrs_0_4_0_features = f: updateFeatures f (rec {
    chrono_0_4_0.default = true;
    serde_1_0_27.default = true;
    serde_derive_1_0_27.default = true;
    serde_json_1_0_9.default = true;
    task_hookrs_0_4_0.default = (f.task_hookrs_0_4_0.default or true);
    uuid_0_6_0.default = true;
    uuid_0_6_0.serde = true;
  }) [ chrono_0_4_0_features serde_1_0_27_features serde_derive_1_0_27_features serde_json_1_0_9_features uuid_0_6_0_features ];
  tempdir_0_3_6 = { features?(tempdir_0_3_6_features {}) }: tempdir_0_3_6_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_3_0 ]);
  };
  tempdir_0_3_6_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_3_0.default = true;
    tempdir_0_3_6.default = (f.tempdir_0_3_6.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_3_0_features ];
  tempfile_2_2_0 = { features?(tempfile_2_2_0_features {}) }: tempfile_2_2_0_ {
    dependencies = mapFeatures features ([ rand_0_3_22 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_36 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  tempfile_2_2_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_36.default = true;
    rand_0_3_22.default = true;
    redox_syscall_0_1_37.default = true;
    tempfile_2_2_0.default = (f.tempfile_2_2_0.default or true);
    winapi_0_2_8.default = true;
  }) [ rand_0_3_22_features redox_syscall_0_1_37_features libc_0_2_36_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  term_0_4_6 = { features?(term_0_4_6_features {}) }: term_0_4_6_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  term_0_4_6_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    term_0_4_6.default = (f.term_0_4_6.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  termcolor_0_3_4 = { features?(termcolor_0_3_4_features {}) }: termcolor_0_3_4_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ wincolor_0_1_6 ]) else []);
  };
  termcolor_0_3_4_features = f: updateFeatures f (rec {
    termcolor_0_3_4.default = (f.termcolor_0_3_4.default or true);
    wincolor_0_1_6.default = true;
  }) [ wincolor_0_1_6_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_36 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_36.default = true;
    redox_syscall_0_1_37.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_36_features redox_syscall_0_1_37_features redox_termios_0_1_1_features ];
  termios_0_3_0 = { features?(termios_0_3_0_features {}) }: termios_0_3_0_ {
    dependencies = mapFeatures features ([ libc_0_2_36 ]);
  };
  termios_0_3_0_features = f: updateFeatures f (rec {
    libc_0_2_36.default = true;
    termios_0_3_0.default = (f.termios_0_3_0.default or true);
  }) [ libc_0_2_36_features ];
  textwrap_0_9_0 = { features?(textwrap_0_9_0_features {}) }: textwrap_0_9_0_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_4 ]);
  };
  textwrap_0_9_0_features = f: updateFeatures f (rec {
    textwrap_0_9_0.default = (f.textwrap_0_9_0.default or true);
    unicode_width_0_1_4.default = true;
  }) [ unicode_width_0_1_4_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_0_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_0_0_features unreachable_1_0_0_features ];
  time_0_1_39 = { features?(time_0_1_39_features {}) }: time_0_1_39_ {
    dependencies = mapFeatures features ([ libc_0_2_36 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  time_0_1_39_features = f: updateFeatures f (rec {
    libc_0_2_36.default = true;
    redox_syscall_0_1_37.default = true;
    time_0_1_39.default = (f.time_0_1_39.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntdef = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
  }) [ libc_0_2_36_features redox_syscall_0_1_37_features winapi_0_3_4_features ];
  toml_0_4_5 = { features?(toml_0_4_5_features {}) }: toml_0_4_5_ {
    dependencies = mapFeatures features ([ serde_1_0_27 ]);
  };
  toml_0_4_5_features = f: updateFeatures f (rec {
    serde_1_0_27.default = true;
    toml_0_4_5.default = (f.toml_0_4_5.default or true);
  }) [ serde_1_0_27_features ];
  toml_query_0_4_0 = { features?(toml_query_0_4_0_features {}) }: toml_query_0_4_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 is_match_0_1_0 lazy_static_0_2_11 regex_0_2_6 toml_0_4_5 ]);
    features = mkFeatures (features.toml_query_0_4_0 or {});
  };
  toml_query_0_4_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    is_match_0_1_0.default = true;
    lazy_static_0_2_11.default = true;
    regex_0_2_6.default = true;
    toml_0_4_5.default = true;
    toml_query_0_4_0.default = (f.toml_query_0_4_0.default or true);
    toml_query_0_4_0.log =
      (f.toml_query_0_4_0.log or false) ||
      (f.toml_query_0_4_0.logging or false) ||
      (toml_query_0_4_0.logging or false);
  }) [ error_chain_0_11_0_features is_match_0_1_0_features lazy_static_0_2_11_features regex_0_2_6_features toml_0_4_5_features ];
  toml_query_0_6_0 = { features?(toml_query_0_6_0_features {}) }: toml_query_0_6_0_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 is_match_0_1_0 lazy_static_1_0_0 regex_0_2_6 toml_0_4_5 ]);
    features = mkFeatures (features.toml_query_0_6_0 or {});
  };
  toml_query_0_6_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    is_match_0_1_0.default = true;
    lazy_static_1_0_0.default = true;
    regex_0_2_6.default = true;
    toml_0_4_5.default = true;
    toml_query_0_6_0.default = (f.toml_query_0_6_0.default or true);
    toml_query_0_6_0.log =
      (f.toml_query_0_6_0.log or false) ||
      (f.toml_query_0_6_0.logging or false) ||
      (toml_query_0_6_0.logging or false);
  }) [ error_chain_0_11_0_features is_match_0_1_0_features lazy_static_1_0_0_features regex_0_2_6_features toml_0_4_5_features ];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_6_features ];
  unicode_normalization_0_1_5 = { features?(unicode_normalization_0_1_5_features {}) }: unicode_normalization_0_1_5_ {};
  unicode_normalization_0_1_5_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_5.default = (f.unicode_normalization_0_1_5.default or true);
  }) [];
  unicode_width_0_1_4 = { features?(unicode_width_0_1_4_features {}) }: unicode_width_0_1_4_ {
    features = mkFeatures (features.unicode_width_0_1_4 or {});
  };
  unicode_width_0_1_4_features = f: updateFeatures f (rec {
    unicode_width_0_1_4.default = (f.unicode_width_0_1_4.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  url_1_6_0 = { features?(url_1_6_0_features {}) }: url_1_6_0_ {
    dependencies = mapFeatures features ([ idna_0_1_4 matches_0_1_6 percent_encoding_1_0_1 ]);
    features = mkFeatures (features.url_1_6_0 or {});
  };
  url_1_6_0_features = f: updateFeatures f (rec {
    idna_0_1_4.default = true;
    matches_0_1_6.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_6_0.default = (f.url_1_6_0.default or true);
    url_1_6_0.encoding =
      (f.url_1_6_0.encoding or false) ||
      (f.url_1_6_0.query_encoding or false) ||
      (url_1_6_0.query_encoding or false);
    url_1_6_0.heapsize =
      (f.url_1_6_0.heapsize or false) ||
      (f.url_1_6_0.heap_size or false) ||
      (url_1_6_0.heap_size or false);
  }) [ idna_0_1_4_features matches_0_1_6_features percent_encoding_1_0_1_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  uuid_0_6_0 = { features?(uuid_0_6_0_features {}) }: uuid_0_6_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.uuid_0_6_0.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.uuid_0_6_0.serde or false then [ serde_1_0_27 ] else []));
    features = mkFeatures (features.uuid_0_6_0 or {});
  };
  uuid_0_6_0_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    serde_1_0_27.default = (f.serde_1_0_27.default or false);
    uuid_0_6_0.default = (f.uuid_0_6_0.default or true);
    uuid_0_6_0.md5 =
      (f.uuid_0_6_0.md5 or false) ||
      (f.uuid_0_6_0.v3 or false) ||
      (uuid_0_6_0.v3 or false);
    uuid_0_6_0.rand =
      (f.uuid_0_6_0.rand or false) ||
      (f.uuid_0_6_0.v4 or false) ||
      (uuid_0_6_0.v4 or false);
    uuid_0_6_0.sha1 =
      (f.uuid_0_6_0.sha1 or false) ||
      (f.uuid_0_6_0.v5 or false) ||
      (uuid_0_6_0.v5 or false);
    uuid_0_6_0.std =
      (f.uuid_0_6_0.std or false) ||
      (f.uuid_0_6_0.default or false) ||
      (uuid_0_6_0.default or false);
  }) [ rand_0_4_2_features serde_1_0_27_features ];
  version_2_0_1 = { features?(version_2_0_1_features {}) }: version_2_0_1_ {};
  version_2_0_1_features = f: updateFeatures f (rec {
    version_2_0_1.default = (f.version_2_0_1.default or true);
  }) [];
  vobject_0_4_2 = { features?(vobject_0_4_2_features {}) }: vobject_0_4_2_ {
    dependencies = mapFeatures features ([ error_chain_0_11_0 ]);
    features = mkFeatures (features.vobject_0_4_2 or {});
  };
  vobject_0_4_2_features = f: updateFeatures f (rec {
    error_chain_0_11_0.default = true;
    vobject_0_4_2.chrono =
      (f.vobject_0_4_2.chrono or false) ||
      (f.vobject_0_4_2.timeconversions or false) ||
      (vobject_0_4_2.timeconversions or false);
    vobject_0_4_2.default = (f.vobject_0_4_2.default or true);
  }) [ error_chain_0_11_0_features ];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  walkdir_1_0_7 = { features?(walkdir_1_0_7_features {}) }: walkdir_1_0_7_ {
    dependencies = mapFeatures features ([ same_file_0_1_3 ])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  walkdir_1_0_7_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    same_file_0_1_3.default = true;
    walkdir_1_0_7.default = (f.walkdir_1_0_7.default or true);
    winapi_0_2_8.default = true;
  }) [ same_file_0_1_3_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  wincolor_0_1_6 = { features?(wincolor_0_1_6_features {}) }: wincolor_0_1_6_ {
    dependencies = mapFeatures features ([ winapi_0_3_4 ]);
  };
  wincolor_0_1_6_features = f: updateFeatures f (rec {
    winapi_0_3_4.consoleapi = true;
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.processenv = true;
    winapi_0_3_4.winbase = true;
    winapi_0_3_4.wincon = true;
    wincolor_0_1_6.default = (f.wincolor_0_1_6.default or true);
  }) [ winapi_0_3_4_features ];
  xdg_basedir_1_0_0 = { features?(xdg_basedir_1_0_0_features {}) }: xdg_basedir_1_0_0_ {
    features = mkFeatures (features.xdg_basedir_1_0_0 or {});
  };
  xdg_basedir_1_0_0_features = f: updateFeatures f (rec {
    xdg_basedir_1_0_0.default = (f.xdg_basedir_1_0_0.default or true);
  }) [];
}
